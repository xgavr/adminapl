<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Client extends \Application\Entity\Client implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'aplId', 'status', 'dateCreated', 'name', 'salesTotal', 'salesOrder', 'salesGood', 'pricecol', '' . "\0" . 'Application\\Entity\\Client' . "\0" . 'contacts', '' . "\0" . 'Application\\Entity\\Client' . "\0" . 'cart', '' . "\0" . 'Application\\Entity\\Client' . "\0" . 'manager', '' . "\0" . 'Application\\Entity\\Client' . "\0" . 'comments'];
        }

        return ['__isInitialized__', 'id', 'aplId', 'status', 'dateCreated', 'name', 'salesTotal', 'salesOrder', 'salesGood', 'pricecol', '' . "\0" . 'Application\\Entity\\Client' . "\0" . 'contacts', '' . "\0" . 'Application\\Entity\\Client' . "\0" . 'cart', '' . "\0" . 'Application\\Entity\\Client' . "\0" . 'manager', '' . "\0" . 'Application\\Entity\\Client' . "\0" . 'comments'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Client $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getAplId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAplId', []);

        return parent::getAplId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAplId($aplId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAplId', [$aplId]);

        return parent::setAplId($aplId);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalesTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalesTotal', []);

        return parent::getSalesTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalesTotal($salesTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalesTotal', [$salesTotal]);

        return parent::setSalesTotal($salesTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalesOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalesOrder', []);

        return parent::getSalesOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalesOrder($salesOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalesOrder', [$salesOrder]);

        return parent::setSalesOrder($salesOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalesGood()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalesGood', []);

        return parent::getSalesGood();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalesGood($salesGood)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalesGood', [$salesGood]);

        return parent::setSalesGood($salesGood);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusAsString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusAsString', []);

        return parent::getStatusAsString();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getPricecol()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPricecol', []);

        return parent::getPricecol();
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceColAsString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceColAsString', []);

        return parent::getPriceColAsString();
    }

    /**
     * {@inheritDoc}
     */
    public function setPricecol($pricecol)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPricecol', [$pricecol]);

        return parent::setPricecol($pricecol);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreated', []);

        return parent::getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreated($dateCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreated', [$dateCreated]);

        return parent::setDateCreated($dateCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getContacts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContacts', []);

        return parent::getContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function addContact($contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContact', [$contact]);

        return parent::addContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function getLegalContacts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLegalContacts', []);

        return parent::getLegalContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function getLegalContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLegalContact', []);

        return parent::getLegalContact();
    }

    /**
     * {@inheritDoc}
     */
    public function getOtherContacts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtherContacts', []);

        return parent::getOtherContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function getCart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCart', []);

        return parent::getCart();
    }

    /**
     * {@inheritDoc}
     */
    public function addCart($cart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCart', [$cart]);

        return parent::addCart($cart);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        return parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getManager()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManager', []);

        return parent::getManager();
    }

    /**
     * {@inheritDoc}
     */
    public function setManager($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManager', [$user]);

        return parent::setManager($user);
    }

}
