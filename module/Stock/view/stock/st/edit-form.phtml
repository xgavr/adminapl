<?php
use Stock\Entity\St;
use Stock\Entity\StGood;

$form = $this->form;

$form->get('office_id')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('company')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('user')->setAttributes([
    'class'=>'form-control', 
    ]);

//$form->get('userSearch')->setAttributes([
//    'class'=>'form-control', 
//    'data-provide' => "typeahead",
//    'autocomplete' => 'off',
//    'placeholder' => 'Телефон'
//    ]);

$form->get('cost')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('doc_date')->setAttributes([
    'class'=>'form-control', 
    'min' => date('Y-m-d', strtotime($allowDate.' + 1 day')),
    'disabled' => $disabled,
    ]);

$form->get('doc_no')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('comment')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('status')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('writeOff')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('submit')->setAttributes(['class'=>'btn btn-primary', 'value' => 'Сохранить', 'id' => 'st-submit']);

$form->prepare();

$docName = 'Новый';
if ($st){
    $docName = '№ '.$st->getDocNo().' от  '.date('d.m.Y', strtotime($st->getDocDate()));
}

?>




<?= $this->form()->openTag($form); ?>
            
<div class="modal-header">
    <h5 class="modal-title" id="stModalLabel">Списание товаров <?= $docName?></h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
            
<div class="modal-body">
    <div class="row">
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('doc_no')); ?>
                <?= $this->formElement($form->get('doc_no')); ?>
                <?= $this->formElementErrors($form->get('doc_no')); ?>                  
            </div>
        </div>    
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('office_id')); ?>
                <?= $this->formElement($form->get('office_id')); ?>
                <?= $this->formElementErrors($form->get('office_id')); ?>                  
            </div>
        </div>    
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('status')); ?>
                <?= $this->formElement($form->get('status')); ?>
                <?= $this->formElementErrors($form->get('status')); ?>                  
            </div>
        </div>
        <div class="col-xs-2 text-right">
        </div>    
        <div class="col-xs-2 text-right">
            <h1 class="display-4" id="stQuantity"></h1>
        </div>    
        <div class="col-xs-1 text-right">
            <h1 class="display-4" id="stAmount"><?= ($st) ? round($st->getAmount(), 2):"" ?></h1>                        
        </div>    
    </div>    
    <div class="row">
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('doc_date')); ?>
                <?= $this->formElement($form->get('doc_date')); ?>
                <?= $this->formElementErrors($form->get('doc_date')); ?>                  
            </div>
        </div>    
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('company')); ?>
                <?= $this->formElement($form->get('company')); ?>
                <?= $this->formElementErrors($form->get('company')); ?>                  
            </div>
        </div>    
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('writeOff')); ?>
                <?= $this->formElement($form->get('writeOff')); ?>
                <?= $this->formElementErrors($form->get('writeOff')); ?>                  
            </div>
        </div>
        <div class="col-xs-3">                        
            <div class="form-group" id="userGroup">
                <?= $this->formLabel($form->get('user')); ?>
                <?= $this->formElement($form->get('user')); ?>
                <?= $this->formElementErrors($form->get('user')); ?>                  
            </div>
            <div class="form-group" id="costGroup">
                <?= $this->formLabel($form->get('cost')); ?>
                <?= $this->formElement($form->get('cost')); ?>
                <?= $this->formElementErrors($form->get('cost')); ?>                  
            </div>
        </div>    
        <div class="col-xs-3">                        
        </div>    
    </div>        
    <div class="row">
        <div class="col-xs-12">
            <div id="stgoodtoolbar">
                <div class="form-inline" role="form">
                    <button type="button" class="btn btn-default st-good-modal-show" modal-url="/st/good-edit-form">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                    </button>
                    <button type="button" class="btn btn-default" onclick="stFill()">
                        <span aria-hidden="true">Заполнить из заказа</span>
                    </button>
                </div>
            </div>
            <table id="stgoodtable" 
                data-toggle="stgoodtable" 
                data-url="/st/good-content/<?= ($st) ? $st->getId():"" ?>"
                data-side-pagination="client"
                data-pagination="true"
                data-cookie="true"
                data-cookie-id-table="stGoodSave<?= ($st) ? $st->getId():"new" ?>"
                data-cookie-expire="1m"
                data-page-size = "5"
                data-page-list="[5, 10, 20, 50]"
                data-toolbar="#stgoodtoolbar"
                data-show-refresh="true"
                data-show-toggle="false"
                data-show-columns="true"
                data-query-params="stgoodQueryParams"
                data-response-handler="stgoodResponseHandler"
                data-unique-id = "rowNo"
                data-row-style="takeStyle"
                >
                <thead>
                    <tr>
                        <th data-field="rowNo" data-type="numeric" data-align="right">N</th>
                        <th data-field="good.code" data-type="numeric" data-formatter="goodFormatter">Артикул</th>
                        <th data-field="good.producer.name" data-type="numeric">Производитель</th>
                        <th data-field="good.name" data-type="numeric">Наименование</th>
                        <th data-field='price' data-formatter="pgPriceFormatter" data-align="right">Цена</th>
                        <th data-field='quantity' data-align="right">Количество</th>
                        <th data-field='amount' data-align="right">Сумма</th>
                        <th data-field="baseKey" data-visible="false" data-editable="true" data-editable-type="select" data-editable-source="/st/find-base/<?= ($st) ? $st->getId():"" ?>" data-width="10">Партия</th>
                        <th data-field="rowNo" data-formatter="pgEditFormatter" data-width="10"></th>
                        <th data-field="rowNo" data-formatter="pgActiveFormatter" data-width="10"></th>
                     </tr>                
                </thead>
            </table>
        </div>
    </div>    
    <div class="row">
        <div class="col-xs-12">
            <div class="form-group">
                <?= $this->formLabel($form->get('comment')); ?>
                <?= $this->formElement($form->get('comment')); ?>
                <?= $this->formElementErrors($form->get('comment')); ?>                  
            </div>                        
        </div>                                            
    </div>        

    <?= $this->formElement($form->get('csrf')); ?>
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
    <button type="submit" class="btn btn-primary" id="st-submit" <?= $disabled ? 'disabled':''; ?>>Сохранить</button>
</div>

<?= $this->form()->closeTag(); ?>
            
<script>
    function submitForm(){
        var data = serializeForm('#st-form');
        data.stGood = getFormatedStGood();
        $.ajax({
            type: 'POST',
            url: '/st/edit-form/<?= ($st) ? $st->getId():"" ?>?office='+$('#office').val(),
            data: $.param(data)
        })
            .done(function (data) {
                if (data == 'ok'){
                    $('#stModal').modal('hide');
                    if ($('#table').length){
                        $('#table').bootstrapTable('refresh');
                    }    
                    if ($('#movementTable').length){
                        $('#movementTable').bootstrapTable('refresh');
                    }    
                } else {
                    $('#stModal .modal-content').html(data);                    
                }    
            })
            .fail(function () {
                alert("Ошибка при открытии формы.");

            });    
    };
    
    function getFormatedStGood(){
        var data = $('#stgoodtable').bootstrapTable('getData');
        var result = [];
        $.each( data, function( index, row ) {
            var newRow = {
                good_id: row.good.id,
                quantity: row.quantity,
                amount: row.amount
            };
            result.push(newRow);
        });   
        return result;
    }
    
    function stUpdateTotal(){
        var data = $('#stgoodtable').bootstrapTable('getData');
        var amount = 0; var quantity = 0;
        $.each(data, function( index, value ) {
            amount += Math.round(value.amount*100)/100;
            quantity += Math.round(value.quantity*100)/100; 
        });
        $('#stAmount').html(Math.round(amount*100)/100);
        $('#stQuantity').html(Math.round(quantity*100)/100);
    }
    
    //удаление строки из таблицы
    function removeTableRowByUniqueId(index){
        $('#stgoodtable').bootstrapTable('removeByUniqueId', index);
        stUpdateTotal();
    }
    
    function stFill(){
        bootbox.prompt('Номер заказа в АПЛ',
            function(result) {
                if (result){
                    $('input[name="comment"]').val(result);
                    $.ajax({
                        type: 'GET',
                        url: "/order/good-content?aplId="+result
                    })
                        .done(function (data) {
                            $('#stgoodtable').bootstrapTable('removeAll');
                            var rows = [];
                            $.each( data, function( index, row ) { 
                                var good = {
                                    id: row.good.id,
                                    code: row.good.code,
                                    name: row.good.name,
                                    producer: {name: row.good.producer.name}
                                };
                                var row = {
                                    good: good,
                                    amount: row.price*row.num,
                                    quantity: row.num,
                                    price: row.price,
                                    rowNo: index+1
                                };

                                rows.push(row);
                            });   
                            $('#stgoodtable').bootstrapTable('append', rows);                        
                            stUpdateTotal();
                        })
                        .fail(function () {
                            alert("Ошибка при получении данных.");

                        });            
                }        
        });        
    }
    
    $('#office').on('change', function(){
        $.getJSON( '/offices/legals/'+$('#office').val(), function( data ) {
            $('#company').empty();
            $.each( data.rows, function( key, value ) {
                $('#company').append('<option value="' + key + '">' + value.name + '</option>');
            });
        });    
    });
            
    function hideUserGroup()
    {
        $('#userGroup').hide();
        $('#user').attr('required', false);
        if ($("#writeOff").val() == <?= St::WRITE_PAY?>){
            $('#userGroup').show();
            $('#userSearch').attr('required', true);
        }
        
        $('#costGroup').hide();
        $('#cost').attr('required', false);
        if ($("#writeOff").val() == <?= St::WRITE_COST?>){
            $('#costGroup').show();
            $('#cost').attr('required', true);
        }
    }
    
    $( document ).ready(function() {
        
        hideUserGroup();
        
        $('#stgoodtable').bootstrapTable({
            onLoadSuccess: function(res){
                <?php if ($good):?>
                    var rows = [];
                    var good = {
                        id: '<?= $good->getId()?>',
                        code: '<?= $good->getCode()?>',
                        name: '<?= $good->getNameShort()?>',
                        producer: {name: '<?= $good->getProducer()->getName()?>'}
                    };
                    var row = {
                        good: good,
                        amount: <?= $good->getMeanPrice()?>,
                        quantity: 1,
                        price: <?= $good->getMeanPrice()?>,
                        rowNo: 1
                    };

                    rows.push(row);
                    $('#stgoodtable').bootstrapTable('append', rows);                        
                <?php endif ?>
                stUpdateTotal();
            }            
        }); 

        $('#userSearch').typeahead({
            source: function(query, process) {
                return $.post("/users/live-search",{search: query, limit: 8} ,function (data) {
                    return process(data.rows);
                });
            },
            changeInputOnSelect: false,
            afterSelect: function(data) {
                $('#user').val(data.id);
                $('#userSearch').val(data.phone);
                $('#userName').html(data.fullName);
            }
        });
        
        var forms = $('#st-form');
        
        forms.submit(function() {
            submitForm();
            return false;
        });
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('st-submit', function(event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
                submitForm();
            }, false);    
        });
        
        $('#writeOff').on('change', function(){
            hideUserGroup();
        });
    });    
    
    function stGoodRefreshTable(){
        $('#stgoodtable').bootstrapTable('refresh');
    }
    
    function stgoodQueryParams(params) {
        $('#stgoodtoolbar').find('input[name]').each(function () {
            params[$(this).attr('name')] = $(this).val();
        });
        limit = $('#stgoodtable .page-size').html();
        if (limit){
            params.limit = limit;
        }    
        offset = $('#stgoodtable li.page-number.active a').html();
        if (offset){
            params.offset = params.limit * (offset - 1);
        }    
        
        return params;
    }
        
    function goodFormatter(value, row){
        var url = '/goods/view/'+row.good.id;
        btn = '<nobr><a';
        btn += ' href="'+url+'"';
        btn += ' class="btn btn-link btn-xs" target="_blank">';
        btn += '<span class="glyphicon glyphicon-link"></span>';
        btn += '</a>'+value + '</nobr>';
        return btn;
    }    
    
    function pgEditFormatter(value, row){
        var url = '/st/good-edit-form/';
        btn = '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-default btn-xs st-good-modal-show"';
        btn += ' aria-label="Left Align"'; 
        btn += ' unique-id="'+value+'"';
        btn += ' modal-url="'+url+'">';
        btn += '<span class="glyphicon glyphicon-edit" aria-hidden="true"></span>';
        btn += '</button>';
        return btn;
    }    
    
    function pgActiveFormatter(value, row){
        btn = '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-danger btn-xs table-row-remove"';
        btn += ' aria-label="Left Align"'; 
        btn += ' title="Удалить"'; 
        btn += ' onclick="removeTableRowByUniqueId('+value+', \'stgoodtable\')">';
        btn += '<span class="glyphicon glyphicon-trash" aria-hidden="true"></span>';
        btn += '</button>';
        return btn;
    }    
    
    function pgPriceFormatter(value, row){
        return Math.round(row.amount*100/row.quantity)/100;
    }        
    
    function stgoodResponseHandler(res) {
        return res;
    }     
</script>