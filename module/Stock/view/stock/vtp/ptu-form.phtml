<?php
use Stock\Entity\Vtp;

if ($ptu){
    $docName = '№ '.$ptu->getDocNo().' от  '.date('d.m.Y', strtotime($ptu->getDocDate()));
}

?>

<div class="modal-header">
    <h5 class="modal-title" id="vtpModalLabel">Возвраты по ПТУ <?= $docName?></h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="row">
    <div class="col-xs-12">
        <div id="vtptoolbar">
            <div class="form-inline" role="form">
                <button class="btn btn-default vtp-modal-show" type="button" modal-url="/vtp/edit-form?ptu=<?= $ptu->getId()?>">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </button>                
            </div>
        </div>
        <table id="vtptable" 
            data-toggle="vtptable" 
            data-url="/vtp/content/<?= ($ptu) ? $ptu->getId():"" ?>"
            data-side-pagination="server"
            data-pagination="true" 
            data-page-list="[5, 10, 20, 50]"
            data-toolbar="#vtptoolbar"
            data-show-refresh="true"
            data-show-toggle="true"
            data-query-params="vtpQueryParams"
            data-sort-name="id"
            data-sort-order="desc"            
            data-response-handler="vtpResponseHandler"
            data-classes = "table table-bordered table-hover table-condensed"
            data-row-style="vtpRowStyle"
            >
            <thead>
                <tr>
                     <th data-field="docDate" data-sortable="true">Дата</th>
                     <th data-field="id" data-sortable="false" data-formatter="vtpDocNumFormatter">Номер</th>
                     <th data-field='amount' data-sortable="true" data-align="right" data-formatter="vtpAmountFormatter">Сумма</th>
                     <th data-field='ptu.legal.name' data-sortable="false">Поставщик</th>
                     <th data-field='ptu.office.name' data-sortable="false">Склад</th>
                     <th data-field='comment' data-sortable="false">Примечание</th>
                     <th data-field="id" data-formatter="printFormatter">Торг2</th>
                     <th data-field="id" data-formatter="updFormatter">УПД</th>
                     <th data-field="id" data-formatter="vtpActiveFormatter" data-align="center"></th>
                 </tr>                
            </thead>
        </table>
    </div>
</div>    
<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
</div>

<script>
    var vtptable = $('#vtptable');
    
    $( document ).ready(function() {        
        vtptable.bootstrapTable({
            onLoadSuccess: function(res){
                
            }            
        });         
    });
    
    function vtpRowStyle(row){
        var retired = 'vtptablerow';
        if (row.status == '<?= Vtp::STATUS_RETIRED?>'){
           retired += ' retired';
        }
        switch(row.statusDoc){
            case '<?= Vtp::STATUS_DOC_NOT_RECD?>': 
                        return {classes: 'success '+retired}; break;
            case '<?= Vtp::STATUS_DOC_RECD?>': 
                        return {classes: 'warning '+retired}; break;
                default:break;     
        }        
        return {classes: retired};
    }
    
    function vtpRefreshTable(){
        vtptable.bootstrapTable('refresh');
    }

    function vtpQueryParams(params) {
        $('#vtptoolbar').find('input[name]').each(function () {
            params[$(this).attr('name')] = $(this).val();
        });
        limit = $('#vtptable .page-size').html();
        if (limit){
            params.limit = limit;
        }    
        offset = $('#vtptable li.page-number.active a').html();
        if (offset){
            params.offset = params.limit * (offset - 1);
        }    
        
        return params;
    }

    function vtpAmountFormatter(value){
        return (Math.round(value*100)/100).toFixed(2);
    }    

    function vtpDocNumFormatter(value, row){
        if (row.aplId > 0){
            return row.aplId;
        }
        return value;
    }    
    
    function vtpActiveFormatter(value, row){
        var url = '/vtp/edit-form/'+value;
        btn = '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-default btn-xs vtp-modal-show"';
        btn += ' aria-label="Left Align"'; 
        btn += ' modal-url="'+url+'">';
        btn += '<span class="glyphicon glyphicon-edit" aria-hidden="true"></span>';
        btn += '</button>';

        return btn;
    }    
    
    function printFormatter(value, row){

        var url = '/print/vtp-torg2/'+value;
        btn = '<a href="'+url+'" target="_blank">pdf</a>';
        url = '/print/vtp-torg2/'+value+'?ext=Xls';
        btn += ' <a href="'+url+'" target="_blank">xls</a>';
        return btn;
    }    
    
    function updFormatter(value, row){

        var url = '/print/vtp-upd/'+value;
        btn = '<a href="'+url+'" target="_blank">pdf</a>';
        url = '/print/vtp-upd/'+value+'?ext=Xls';
        btn += ' <a href="'+url+'" target="_blank">xls</a>';
        return btn;
    }    
    
    function vtpResponseHandler(res) {
        return res;
    }    
    
    function changeStatus(vtpId, status){
        $.get( "/vtp/status/"+vtpId+'?status='+status, function(data){
            vtpRefreshTable();
        });        
    }

    function changeStatusDoc(vtpId, statusDoc){
        $.get( "/vtp/status-doc/"+vtpId+'?status='+statusDoc, function(data){
            vtpRefreshTable();
        });        
    }
    
    var menu = new BootstrapMenu('.vtptablerow', {
        fetchElementData: function(rowElem) {
            var rowId = $(rowElem).attr('data-index');
            return vtptable.bootstrapTable('getData')[rowId];
        },
        actionsGroups: [
           ['statusActiv', 'statusRetired'],
        ],      
        actions: {
            statusDocNew: {
                name: 'Новый',
                onClick: function(row) {
                    changeStatusDoc(row.id, <?= Vtp::STATUS_DOC_NEW?>);
                },
                isShown: function(row) {
                  return row.statusDoc != '<?= Vtp::STATUS_DOC_NEW?>';
                },
                isEnabled: function(row) {
                    return row.docDate > '<?= $allowDate?>';
                }                
            }, 
            statusDocRect: {
                name: 'Отправлен',
                classNames: 'bg-warning',
                onClick: function(row) {
                    changeStatusDoc(row.id, <?= Vtp::STATUS_DOC_RECD?>);
                },
                isShown: function(row) {
                  return row.statusDoc != '<?= Vtp::STATUS_DOC_RECD?>';
                },
                isEnabled: function(row) {
                    return row.docDate > '<?= $allowDate?>';
                }                
            }, 
            statusDocNotRect: {
                name: 'Принят',
//                iconClass: 'glyphicon glyphicon-ok',
                classNames: 'bg-success',
                onClick: function(row) {
                    changeStatusDoc(row.id, <?= Vtp::STATUS_DOC_NOT_RECD?>);
                },
                isShown: function(row) {
                  return row.statusDoc != '<?= Vtp::STATUS_DOC_NOT_RECD?>';
                },
                isEnabled: function(row) {
                    return row.docDate > '<?= $allowDate?>';
                }                
            }, 
            statusActiv: {
                name: 'Сделать активным',
                iconClass: 'glyphicon glyphicon-ok',
                onClick: function(row) {
                    changeStatus(row.id, <?= Vtp::STATUS_ACTIVE?>);
                },
                isShown: function(row) {
                  return row.status == <?= Vtp::STATUS_RETIRED?>;
                },
                isEnabled: function(row) {
                    return row.docDate > '<?= $allowDate?>';
                }                
            }, 
            statusRetired: {
                name: 'Сделать не активным',
                iconClass: 'glyphicon glyphicon-remove',
//                classNames: 'bg-danger',
                onClick: function(row) {
                    changeStatus(row.id, <?= Vtp::STATUS_RETIRED?>);
                },
                isShown: function(row) {
                  return row.status == <?= Vtp::STATUS_ACTIVE?>;
                },
                isEnabled: function(row) {
                    return row.docDate > '<?= $allowDate?>';
                }                
            }
        }
    });    
</script>