<?php
$form = $this->form;

$form->get('legal_id')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('office_id')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('company')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('supplier')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('contract_id')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('doc_date')->setAttributes([
    'class'=>'form-control', 
    'min' => date('Y-m-d', strtotime($allowDate.' + 1 day')),
//    'value' => date('Y-m-d'),
    'disabled' => $disabled,
    ]);

$form->get('doc_no')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('comment')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('status')->setAttributes([
    'class'=>'form-control', 
    ]);


$form->get('submit')->setAttributes(['class'=>'btn btn-primary', 'value' => 'Сохранить', 'id' => 'ptu-submit']);

$form->prepare();

$docName = 'Новый';
if ($ptu && !$copy){
    $docName = '№ '.$ptu->getDocNo().' от  '.date('d.m.Y', strtotime($ptu->getDocDate()));
}

?>

<?= $this->form()->openTag($form); ?>
            
<div class="modal-header">
    <h5 class="modal-title" id="ptuModalLabel">Поступление товаров <?= $docName?></h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
            
<div class="modal-body">
    <div class="row">
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('doc_no')); ?>
                <?= $this->formElement($form->get('doc_no')); ?>
                <?= $this->formElementErrors($form->get('doc_no')); ?>                  
            </div>
        </div>    
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('office_id')); ?>
                <?= $this->formElement($form->get('office_id')); ?>
                <?= $this->formElementErrors($form->get('office_id')); ?>                  
            </div>
        </div>    
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('supplier')); ?>
                <?= $this->formElement($form->get('supplier')); ?>
                <?= $this->formElementErrors($form->get('supplier')); ?>                  
            </div>
        </div>    
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('status')); ?>
                <?= $this->formElement($form->get('status')); ?>
                <?= $this->formElementErrors($form->get('status')); ?>                  
            </div>
        </div>
        <div class="col-xs-2 text-right">
            <h1 class="display-4" id="ptuQuantity"></h1>
        </div>    
        <div class="col-xs-1 text-right">
            <h1 class="display-4" id="ptuAmount"><?= ($ptu) ? round($ptu->getAmount(), 2):"" ?></h1>                        
        </div>    
    </div>    
    <div class="row">
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('doc_date')); ?>
                <?= $this->formElement($form->get('doc_date')); ?>
                <?= $this->formElementErrors($form->get('doc_date')); ?>                  
            </div>
        </div>    
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('company')); ?>
                <?= $this->formElement($form->get('company')); ?>
                <?= $this->formElementErrors($form->get('company')); ?>                  
            </div>
        </div>    
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('legal_id')); ?>
                <?= $this->formElement($form->get('legal_id')); ?>
                <?= $this->formElementErrors($form->get('legal_id')); ?>                  
            </div>
        </div>    
        <div class="col-xs-2">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('contract_id')); ?>
                <?= $this->formElement($form->get('contract_id')); ?>
                <?= $this->formElementErrors($form->get('contract_id')); ?>                  
            </div>
        </div>    
        <div class="col-xs-4 text-right">
        </div>    
    </div>        
    <div class="col-md-12">
        <ul class="nav nav-tabs" id="featureTab" role="tablist">
            <li role="presentation"><a href="#ptugoods" role="tab" id="good-tab" data-toggle="tab" aria-controls="ptugoods" aria-expanded="true">Товары <span id="goodBadge" class="badge">0</span></a></li>
            <li role="presentation"><a href="#ptucosts" role="tab" id="cost-tab" data-toggle="tab" aria-controls="ptucosts" aria-expanded="true">Услуги <span id="costBadge" class="badge">0</span></a></li>
        </ul>        
    </div>
    <div class="tab-content" id="featureTabContent">
        <div class="tab-pane fade" role="tabpanel" id="ptugoods" aria-labelledby="good-tab">
            <div class="clearfix"></div>
            <div class="panel panel-body">
                <div class="row">
                    <div class="col-xs-12">
                        <div id="ptugoodtoolbar">
                            <div class="form-inline" role="form">
                                <button type="button" class="btn btn-default ptu-good-modal-show" modal-url="/ptu/good-edit-form">
                                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                </button>
                                <button type="button" class="btn btn-default" onclick="ptuFill()" id="fillPtu" disabled>
                                    <span aria-hidden="true">Заполнить из заказов</span>
                                </button>
                            </div>
                        </div>
                        <table id="ptugoodtable" 
                            data-toggle="ptugoodtable" 
                            data-url="/ptu/good-content/<?= ($ptu) ? $ptu->getId():"" ?>"
                            data-cookie-id-table="ptugoodSaveId"
                            data-cookie-expire="1m"
                            data-side-pagination="client"
                            data-pagination="true"
                            data-page-size = "5"
                            data-page-list="[5, 10, 20, 50]"
                            data-toolbar="#ptugoodtoolbar"
                            data-show-refresh="true"
                            data-show-toggle="false"
                            data-query-params="ptugoodQueryParams"
                            data-response-handler="ptugoodResponseHandler"
                            data-unique-id = "rowNo"
                            data-classes = "table table-bordered table-hover table-condensed"
                            data-show-footer="true"
                            >
                            <thead>
                                <tr>
                                     <th data-field="rowNo" data-type="numeric" data-align="right">N</th>
                                     <th data-field="good.code" data-type="numeric" data-formatter="goodFormatter">Артикул</th>
                                     <th data-field="good.producer.name" data-type="numeric">Производитель</th>
                                     <th data-field="good.name" data-type="numeric">Наименование</th>
                                     <th data-field='amount' data-footer-formatter="totalFooterFormatter" data-formatter="pgPriceFormatter" data-align="right">Цена</th>
                                     <th data-field='quantity' data-align="right" data-footer-formatter="footerFormatter">Количество</th>
                                     <th data-field='unit.code' data-visible="false">ЕИ</th>
                                     <th data-field='unit.name' data-visible="true" data-width="10">ЕИ</th>
                                     <th data-field='amount' data-align="right" data-footer-formatter="footerFormatter" data-formatter="amountFormatter">Сумма</th>
                                     <th data-field='country.code' data-visible="false">Страна</th>
                                     <th data-field='country.name' data-visible="false">Страна</th>
                                     <th data-field='ntd.ntd' data-visible="false">НТД</th>
                                     <th data-field="rowNo" data-formatter="pgActiveFormatter" data-width="5"></th>
                                     <th data-field="rowNo" data-formatter="pgRemoveFormatter" data-width="5"></th>
                                 </tr>                
                            </thead>
                        </table>
                    </div>
                </div>    
            </div>
        </div>
        <div class="tab-pane fade" role="tabpanel" id="ptucosts" aria-labelledby="cost-tab">
            <div class="clearfix"></div>
            <div class="panel panel-body">
                <div class="row">
                    <div class="col-xs-12">
                        <div id="ptucosttoolbar">
                            <div class="form-inline" role="form">
                                <button type="button" class="btn btn-default ptu-cost-modal-show" modal-url="/ptu/cost-edit-form">
                                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                </button>
                            </div>
                        </div>
                        <table id="ptucosttable" 
                            data-toggle="ptucosttable" 
                            data-url="/ptu/cost-content/<?= ($ptu) ? $ptu->getId():"" ?>"
                            data-side-pagination="client"
                            data-pagination="true"
                            data-page-size = "5"
                            data-page-list="[5, 10, 20, 50]"
                            data-toolbar="#ptucosttoolbar"
                            data-show-refresh="true"
                            data-show-toggle="false"
                            data-query-params="ptucostQueryParams"
                            data-response-handler="ptucostResponseHandler"
                            data-unique-id = "rowNo"
                            data-classes = "table table-bordered table-hover table-condensed"
                            data-show-footer="true"
                            >
                            <thead>
                                <tr>
                                     <th data-field="rowNo" data-type="numeric" data-align="right">N</th>
                                     <th data-field="comment" data-type="numeric">Содержание</th>
                                     <th data-field="cost.name" data-type="numeric">Статья затрат</th>
                                     <th data-field='amount' data-footer-formatter="totalFooterFormatter" data-formatter="pgPriceFormatter" data-align="right">Цена</th>
                                     <th data-field='quantity' data-align="right" data-footer-formatter="footerFormatter">Количество</th>
                                     <th data-field='amount' data-align="right" data-footer-formatter="footerFormatter" data-formatter="amountFormatter">Сумма</th>
                                     <th data-field="rowNo" data-formatter="pcActiveFormatter" data-width="5"></th>
                                     <th data-field="rowNo" data-formatter="pcRemoveFormatter" data-width="5"></th>
                                 </tr>                
                            </thead>
                        </table>
                    </div>
                </div>    
            </div>
        </div>
    </div>    
    <div class="row">
        <div class="col-xs-12">
            <div class="form-group">
                <?= $this->formLabel($form->get('comment')); ?>
                <?= $this->formElement($form->get('comment')); ?>
                <?= $this->formElementErrors($form->get('comment')); ?>                  
            </div>                        
        </div>                                            
    </div>        
</div>
                
<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
    <button type="submit" class="btn btn-primary" id="ptu-submit" <?= $disabled ? 'disabled':''; ?>>Сохранить</button>
</div>

<?= $this->form()->closeTag(); ?>
            
<script>
    function submitForm(){
        var data = serializeForm('#ptu-form');
        data.ptuGood = getFormatedPtuGood();
        data.ptuCost = getFormatedPtuCost();
        $.ajax({
            type: 'POST',
            url: '/ptu/edit-form/<?= ($ptu && !$copy) ? $ptu->getId():"" ?>',
            data: $.param(data)
        })
            .done(function (data) {
                if (data == 'ok'){
                    $('#ptuModal').modal('hide');
                    $('#table').bootstrapTable('refresh');
                    if ($('#movementTable').length){
                        $('#movementTable').bootstrapTable('refresh');
                    }    
                } else {
                    $('#ptuModal .modal-content').html(data);                    
                }    
            })
            .fail(function () {
                alert("Ошибка при открытии формы.");

            });    
    };
    
    function getFormatedPtuGood(){
        var data = $('#ptugoodtable').bootstrapTable('getData');
        var result = [];
        $.each( data, function( index, row ) {
            var newRow = {
                good_id: row.good.id,
                quantity: row.quantity,
                amount: row.amount,
                countryName: row.country.name || '',
                unitName: row.unit.name || '',
                unitCode: row.unit.code || '',
                ntd: row.ntd.ntd || ""
            };
            result.push(newRow);
        });   
        return result;
    }

    function getFormatedPtuCost(){
        var data = $('#ptucosttable').bootstrapTable('getData');
        var result = [];
        $.each( data, function( index, row ) {
            var newRow = {
                cost_id: row.cost.id,
                comment: row.comment,
                quantity: row.quantity,
                amount: row.amount
            };
            result.push(newRow);
        });   
        return result;
    }
    
    function ptuUpdateTotal(){
        var goods = $('#ptugoodtable').bootstrapTable('getData');
        var costs = $('#ptucosttable').bootstrapTable('getData');        
        $('#goodBadge').html(goods.length);
        $('#costBadge').html(costs.length);
        var amount = 0; var quantity = 0;
        $.each(goods, function( index, value ) {
            amount += Math.round(value.amount*100)/100;
            quantity += Math.round(value.quantity*100)/100; 
        });
        $.each(costs, function( index, value ) {
            amount += Math.round(value.amount*100)/100;
            quantity += Math.round(value.quantity*100)/100; 
        });
        $('#ptuAmount').html(Math.round(amount*100)/100);
        $('#ptuQuantity').html(Math.round(quantity*100)/100);
    }
    
    //удаление строки из таблицы
    function removeTableRowByUniqueId(index, table){
        $('#'+table).bootstrapTable('removeByUniqueId', index);
        ptuUpdateTotal();
    }
        
    function ptuFill(){
        $.ajax({
            type: 'GET',
            url: "/ptu/fill-content/"+$('#supplier').val()
        })
            .done(function (data) {
                $('#ptugoodtable').bootstrapTable('removeAll');
                
                $.each( data, function( index, row ) { 
                    var good = {
                        id: row.good.id,
                        code: row.good.code,
                        name: row.good.name,
                        producer: {name: row.good.producer.name}
                    };
                    var unit = {
                        name: ''
                    };
                    var country = {
                        name: ''
                    };
                    var ntd = {
                        ntd: ''
                    };
                    var row = {
                        good: good,
                        amount: row.good.meanPrice*row.quantity,
                        quantity: row.quantity,
                        price: row.good.meanPrice,
                        unit: unit,
                        country: country,
                        ntd: ntd
                    };

                    var newRowNo = getNewTableUniqueId('ptugoodtable', 'rowNo');
                    row.rowNo = newRowNo;
                    var rows = [];
                    rows.push(row);
                    $('#ptugoodtable').bootstrapTable('prepend', rows);  
                });    
                ptuUpdateTotal();
                
            })
            .fail(function () {
                alert("Ошибка при получении данных.");

            });            
    }
    
    function contractList(){
        //alert(11);
        $.getJSON( '/contracts/select/?company='+$('#company').val()+'&legal='+$('#legal').val()+'&office='+$('#office').val(), function( data ) {
            $('#contract').empty();
            $.each( data.rows, function( key, value ) {
                $('#contract').append('<option value="' + key + '">' + value.name + '</option>');
            });
        });    
    }
    
    $('#office').on('change', function(){
        $.getJSON( '/offices/legals/'+$('#office').val(), function( data ) {
            $('#company').empty();
            $.each( data.rows, function( key, value ) {
                $('#company').append('<option value="' + key + '">' + value.name + '</option>');
            });
            contractList();
        });    
    });
    
    $('#company').on('change', function(){
        contractList();
    });    
    
    $('#supplier').on('change', function(){
        $('#fillPtu').attr('disabled', true);
        $.getJSON( '/supplier/legals/'+$('#supplier').val(), function( data ) {
            $('#legal').empty();
            $.each( data.rows, function( key, value ) {
                $('#legal').append('<option value="' + key + '">' + value.name + '</option>');
            });
            contractList();     
            if (Object.keys(data.rows).length){
                $('#fillPtu').attr('disabled', false);
            }
        });    
    });
    
    $('#legal').on('change', function(){
        contractList();
    });
    
    $( document ).ready(function() {
        <?php if ($ptu):?>
            <?php if ($ptu->getPtuCosts()->count()):?>
                $('.nav-tabs #cost-tab').tab('show');
            <?php endif;?>    
            <?php if ($ptu->getPtuGoods()->count()):?>
                $('.nav-tabs #good-tab').tab('show');
            <?php endif;?>    
        <?php else:?>        
        <?php endif; ?>        

        $('#ptugoodtable').bootstrapTable({
            onLoadSuccess: function(res){
                ptuUpdateTotal();
            }            
        }); 

        $('#ptucosttable').bootstrapTable({
            onLoadSuccess: function(res){
                ptuUpdateTotal();
            }            
        }); 
        
        var forms = $('#ptu-form');
        
        forms.submit(function() {
            submitForm();
            return false;
        });
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('ptu-submit', function(event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
                submitForm();
            }, false);    
        });
    });    
    
    function ptuGoodRefreshTable(){
        $('#ptugoodtable').bootstrapTable('refresh');
    }
    
    function ptugoodQueryParams(params) {
        $('#ptugoodtoolbar').find('input[name]').each(function () {
            params[$(this).attr('name')] = $(this).val();
        });
        limit = $('#ptugoodtable .page-size').html();
        if (limit){
            params.limit = limit;
        }    
        offset = $('#ptugoodtable li.page-number.active a').html();
        if (offset){
            params.offset = params.limit * (offset - 1);
        }    
        
        return params;
    }
    
    function ptucostQueryParams(params) {
        $('#ptucosttoolbar').find('input[name]').each(function () {
            params[$(this).attr('name')] = $(this).val();
        });
        limit = $('#ptucosttoolbar .page-size').html();
        if (limit){
            params.limit = limit;
        }    
        offset = $('#ptucosttoolbar li.page-number.active a').html();
        if (offset){
            params.offset = params.limit * (offset - 1);
        }    
        
        return params;
    }
    
    function goodFormatter(value, row){
        var url = '/goods/view/'+row.good.id;
        btn = '<nobr><a';
        btn += ' href="'+url+'"';
        btn += ' class="btn btn-link btn-xs" target="_blank">';
        btn += '<span class="glyphicon glyphicon-link"></span>';
        btn += '</a>'+value+'</nobr>';
        return btn;
    }    
    
    function pgPriceFormatter(value, row){
        return (Math.round(value*100/row.quantity)/100).toFixed(2);
    }        
    
    function amountFormatter(value){
        return (Math.round(value*100)/100).toFixed(2);
    }    
    
    function totalFooterFormatter() {
        return 'Итого:';
    }
    
    function footerFormatter(data){
        var field = this.field;
        var precission = 2;
        if (field === 'quantity'){
            precission = 0;
        }
        return (data.map(function (row) {
            return +row[field];
        }).reduce(function (sum, i) {
            return (Math.round((sum + i)*100)/100);
        }, 0)).toFixed(precission);
    }    
    
    function pgActiveFormatter(value, row){
        var url = '/ptu/good-edit-form/';
        btn = '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-default btn-xs ptu-good-modal-show"';
        btn += ' aria-label="Left Align"'; 
        btn += ' unique-id="'+value+'"';
        btn += ' modal-url="'+url+'">';
        btn += '<span class="glyphicon glyphicon-edit" aria-hidden="true"></span>';
        btn += '</button>';

        return btn;
    }    
    
    function pgRemoveFormatter(value, row){
        btn = '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-default btn-xs table-row-remove"';
        btn += ' aria-label="Left Align"'; 
        btn += ' title="Удалить"'; 
        btn += ' onclick="removeTableRowByUniqueId('+value+', \'ptugoodtable\')">';
        btn += '<span class="glyphicon glyphicon-trash" aria-hidden="true"></span>';
        btn += '</button>';
        return btn;
    }    
    
    function pcActiveFormatter(value, row){
        var url = '/ptu/cost-edit-form/';
        btn = '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-default btn-xs ptu-cost-modal-show"';
        btn += ' aria-label="Left Align"'; 
        btn += ' unique-id="'+value+'"';
        btn += ' modal-url="'+url+'">';
        btn += '<span class="glyphicon glyphicon-edit" aria-hidden="true"></span>';
        btn += '</button>';

        return btn;
    }    
    
    function pcRemoveFormatter(value, row){
        btn = '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-default btn-xs table-row-remove"';
        btn += ' aria-label="Left Align"'; 
        btn += ' title="Удалить"'; 
        btn += ' onclick="removeTableRowByUniqueId('+value+', \'ptucosttable\')">';
        btn += '<span class="glyphicon glyphicon-trash" aria-hidden="true"></span>';
        btn += '</button>';
        return btn;
    }    

    function ptugoodResponseHandler(res) {
        return res;
    }     

    function ptucostResponseHandler(res) {
        return res;
    }     
</script>