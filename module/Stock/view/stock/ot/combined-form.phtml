<?php
use Stock\Entity\Ot;

$form = $this->form;

$form->get('office_id')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('company')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('comissSearch')->setAttributes([
    'class'=>'form-control', 
    'data-provide' => "typeahead",
    'autocomplete' => 'off',
    'placeholder' => 'Телефон'
    ]);

$form->get('doc_date')->setAttributes([
    'class'=>'form-control', 
    'min' => date('Y-m-d', strtotime($allowDate.' + 1 day')),
    'disabled' => $disabled,
    ]);

$form->get('doc_no')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('comment')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('status')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('quantity')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('price')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('amount')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('price')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('submit')->setAttributes(['class'=>'btn btn-primary', 'value' => 'Сохранить', 'id' => 'ot-submit']);

$form->prepare();

?>

<?= $this->form()->openTag($form); ?>
            
<div class="modal-header">
    <h5 class="modal-title" id="stModalLabel">Оприходование <b><?= $good->getCode()?> <?= $good->getProducer()->getName() ?> <?= $good->getNameShort() ?></b></h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
            
<div class="modal-body">
    <div class="row">
        <div class="col-xs-4">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('doc_date')); ?>
                <?= $this->formElement($form->get('doc_date')); ?>
                <?= $this->formElementErrors($form->get('doc_date')); ?>                  
            </div>
        </div>    
        <div class="col-xs-4">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('office_id')); ?>
                <?= $this->formElement($form->get('office_id')); ?>
                <?= $this->formElementErrors($form->get('office_id')); ?>                  
            </div>
        </div>    
        <div class="col-xs-4">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('company')); ?>
                <?= $this->formElement($form->get('company')); ?>
                <?= $this->formElementErrors($form->get('company')); ?>                  
            </div>
        </div>    
    </div>    
    <div class="row">
        <div class="col-xs-4">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('quantity')); ?>
                <?= $this->formElement($form->get('quantity')); ?>
                <?= $this->formElementErrors($form->get('quantity')); ?>                  
            </div>
        </div>   
        <div class="col-xs-4">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('price')); ?>
                <?= $this->formElement($form->get('price')); ?>
                <?= $this->formElementErrors($form->get('price')); ?>                  
            </div>
        </div>   
        <div class="col-xs-4">                        
            <div class="form-group">
                <?= $this->formLabel($form->get('amount')); ?>
                <?= $this->formElement($form->get('amount')); ?>
                <?= $this->formElementErrors($form->get('amount')); ?>                  
            </div>
        </div>   
    </div>        
    <div class="row">
        <div class="col-xs-12">
            <div class="form-group">
                <?= $this->formLabel($form->get('comment')); ?>
                <?= $this->formElement($form->get('comment')); ?>
                <?= $this->formElementErrors($form->get('comment')); ?>                  
            </div>                        
        </div>                                            
    </div>        

    <?= $this->formElement($form->get('comiss')); ?>
    <?= $this->formElement($form->get('csrf')); ?>
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
    <button type="submit" class="btn btn-primary" id="ot-submit">Сохранить</button>
</div>

<?= $this->form()->closeTag(); ?>
            
<script>
    function refreshTable(){
        return;
    }
    
    function submitForm(){
        var data = serializeForm('#ot-form');
        $.ajax({
            type: 'POST',
            url: '/ot/combined-form/<?= $good->getId()?>',
            data: $.param(data)
        })
            .done(function (data) {
                if (data == 'ok'){
                    $('#stCombinedModal').modal('hide');
                    if ($('#table').length){
                        $('#table').bootstrapTable('refresh');
                    }    
                    if ($('#movementTable').length){
                        $('#movementTable').bootstrapTable('refresh');
                    }    
                } else {
                    $('#stCombinedModal .modal-content').html(data);                    
                }    
            })
            .fail(function () {
                alert("Ошибка при открытии формы.");

            });    
    };
        
    $('#office').on('change', function(){
        $.getJSON( '/offices/legals/'+$('#office').val(), function( data ) {
            $('#company').empty();
            $.each( data.rows, function( key, value ) {
                $('#company').append('<option value="' + key + '">' + value.name + '</option>');
            });
        });    
    });
                
    $( document ).ready(function() {
        
        $('#userSearch').typeahead({
            source: function(query, process) {
                return $.post("/users/live-search",{search: query, limit: 8} ,function (data) {
                    return process(data.rows);
                });
            },
            changeInputOnSelect: false,
            afterSelect: function(data) {
                $('#user').val(data.id);
                $('#userSearch').val(data.phone);
                $('#userName').html(data.fullName);
            }
        });
        
        var forms = $('#ot-form');
        
        forms.submit(function() {
            submitForm();
            return false;
        });
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('st-submit', function(event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
                submitForm();
            }, false);    
        });
        
    });        
</script>