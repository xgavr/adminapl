<?php
use Application\Entity\Order;
use Application\Entity\Bid;

$this->headTitle('Заказы');
$this->mainMenu()->setActiveItemId('client');
$this->mainMenu()->setActiveUrl($this->url('order'));

$this->pageBreadcrumbs()->setItems([
            'Главная'=>$this->url('home'),
            'Заказы'=>$this->url('order'),
            ]);
?>    

<div class="row">
    <div class="col-md-12">
        <div id="toolbar">
            <div class="form-inline" role="form">
                <a class="btn btn-default" type="button" href="<?= $this->url('order', ['action' => 'intro'])?>" target="_blank">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </a>                
                <div class="form-group">
                    <div class="btn-group">
                        <input id="searchinput" name="search" style="width: 350px" class="form-control enter-search" type="text" placeholder="Артикул, VIN, телефон, email">
                        <span class="glyphicon glyphicon-remove-circle inputclear"></span>
                    </div>
                    <button id="ok" type="submit" class="btn btn-default" title="Поиск">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </div>    
                <div class="form-group">
                    <select id="officeSelect" style="width: 100px" class="form-control refresh-table cookie-control" name="officeId">
                        <option>все</option>
                        <?php foreach ($offices as $office):?>
                            <option value="<?= $office->getId()?>"><?= $office->getName()?></option>
                        <?php endforeach;?>
                    </select>                    
                </div>    
                <div class="form-group">
                    <select id="userSelect" style="width: 200px" class="form-control refresh-table cookie-control" name="userId">
                        <option>все</option>
                        <?php foreach ($users as $user):?>
                            <option value="<?= $user->getId()?>"><?= $user->getName()?></option>
                        <?php endforeach;?>
                    </select>
                </div>    
                <div class="form-group">
                    <select id="statusSelect" style="width: 200px" class="form-control refresh-table cookie-control" name="status">
                        <option>все</option>
                        <?php foreach (Order::getStatusList() as $key=>$value):?>
                            <option value="<?= $key?>"><?= $value?></option>
                        <?php endforeach;?>
                    </select>
                </div>    
<!--                <div class="form-group">
                    <input id="monthSelect" class="form-control" type="month" placeholder="Период" value="<?= date('Y-m');?>">
                </div>-->
            </div>
        </div>
        <table id="table" 
            data-toggle="table" 
            data-cookie="true"
            data-cookie-id-table="orderSaveId"
            data-cookie-expire="1m"
            data-side-pagination="server"
            data-pagination="true" 
            data-page-list="[5, 10, 20, 50]"
            data-toolbar="#toolbar"
            data-show-refresh="true"
            data-show-toggle="false"
            data-show-columns="true"
            data-auto-refresh="true"
            data-query-params="queryParams"
            data-sort-name="dateOper"
            data-sort-order="desc"            
            data-response-handler="responseHandler"
            data-classes = "table table-bordered table-hover table-condensed"
            data-row-style="rowStyle"
            data-detail-view="true"
            data-unique-id="id"
            >
            <thead>
                <tr>
                     <!--<th data-field="id" data-type="numeric" data-sortable="true" data-align="right">ID</th>-->
                     <th data-field="dateOper" data-sortable="true" data-width="50" data-formatter="createdFormatter">С/О</th>
                     <th data-field="id" data-sortable="false" data-width="50" data-align="right" data-formatter="idAplFormatter">Ид/Apl</th>
                     <!--<th data-field="aplId" data-sortable="false" data-width="50" data-formatter="aplLinkFormatter">Apl</th>-->
                     <!--<th data-field="office.name" data-sortable="false" data-width="50">Офис</th>-->
                     <th data-field="contact.name" data-sortable="false" data-formatter="clientFormatter">Покупатель</th>
<!--                     <th data-field="contact.phones" data-sortable="false" data-formatter="phoneFormatter" data-width="50">Телефон</th>
                     <th data-field="contact.emails" data-sortable="false" data-formatter="emailFormatter" data-width="50">Почта</th>-->
                     <th data-field="info" data-sortable="false" data-formatter="infoFormatter">Что нужно</th>
                     <th data-field="contactCar.vin" data-sortable="false" data-formatter="carFormatter">Машина</th>
                     <th data-field="address" data-sortable="false" data-formatter="shippingFormatter">Доставка</th>
                     <th data-field="dependInfo" data-sortable="false" data-formatter="commentFormatter">Комментарий</th>
                     <th data-field='total' data-sortable="false" data-align="right" data-formatter="inFormatter" data-width="100">Сумма</th>
                     <th data-field='user.fullName' data-sortable="false" data-width="50" data-formatter="officeUserFormatter">Оф/Отв</th>
                    <th data-field="id" data-formatter="activeFormatter" data-width="10"></th>
                 </tr>                
            </thead>
        </table>
    </div>
</div>  

<?php echo $this->partial('/application/order/bid-partial', []); ?>
<?php echo $this->partial('/admin/sms/sms-partial', []); ?>
<?php echo $this->partial('/admin/post/post-partial', []); ?>
<?php echo $this->partial('/application/order/comment-partial', []); ?>
<?php echo $this->partial('/stock/index/stock-partial', []); ?>
<script type="text/javascript">
    var $table = $('#table').bootstrapTable({
        onLoadSuccess: function() {
            setCookies('orderSaveId');
        }, 
        onExpandRow: function (index, row, $detail) {
            $detail.html('Идет загрузка...');
            orderDetail(index, row, $detail);
        }
    });
    
//    $('.bid-expand').on('editable-save.bs.table', function (e, field, row, old, $el) {
//        alert(field);
//    });        

    
    function setCookies(cookieKey){
        let expires = 30;
        $('.cookie-control').each(function () {
            Cookies.set(cookieKey+'_'+$(this).attr('id'), $(this).val(), { expires: expires});        
        });        
    }
    
    function getCookies(cookieKey){
        $('.cookie-control').each(function () {
            var cookieVal = Cookies.get(cookieKey+'_'+$(this).attr('id'));
            if (cookieVal !== undefined){
                $(this).val(cookieVal);                
            }
        });                        
        $table.bootstrapTable('refresh', {
            url: '/order/content'
        });
    }
    
    function refreshTable(){
        $table.bootstrapTable('selectPage', 1);
//        $table.bootstrapTable('refresh');
    }

    function officeChange(){
//        $.getJSON( '/accountant/office-cashes/'+$('#officeSelect').val(), function( data ) {
//            $('#userSelect').empty();
//            $.each( data.rows, function( key, value ) {
//                $('#userSelect').append('<option value="' + key + '">' + value.name + '</option>');
//            });            
//            refreshTable();
//        });    
    }
    
    function updateApl(id, url){
        var dialog = bootbox.dialog({
            message: '<p class="text-center"><i class="fa fa-spin fa-spinner"></i>Подождите, пока мы что-нибудь сделаем ...</p>',
            closeButton: false
        });
        $.get( url, function(data){
            $table.bootstrapTable('updateByUniqueId', {id: id, row: data.data});
            dialog.modal('hide');
        });
    }

    function duplicate(id, url){
        bootbox.confirm('Скопировать заказ?',
            function(result) {
                if (result){
                    var dialog = bootbox.dialog({
                        message: '<p class="text-center mb-0"><i class="fa fa-spin fa-cog"></i> Пожалуйста, подождите, пока мы что-то делаем...</p>',
                        closeButton: true
                    });        
                    $.get('/order/duplicate/'+id, function(data){
                        dialog.modal('hide');
                        if (data.result > 0){
                            window.open('/order/intro/'+data.result);
                        } else {                            
                        }
                    });            
                }
        });
    }
    

    $(function () {       
        getCookies('orderSaveId');
        
        $(".inputclear").click(function(){
            $("#searchinput").val('');
            refreshTable();
        });

        $(document).on('click', '.order-modal-show', function (e) {
            var url = $(e.currentTarget).attr('modal-url');
            showFormDialog({
                id: 'orderModal',
                url: url,
                width: $(window).width()-50
            });
        });  

        $('#ok').click(function () {
            refreshTable();
        });
        
        $(document).on('change', '.refresh-table', function (e) {
            refreshTable();
        });
        
        $(document).on('change', '#officeSelect', function (e) {
            officeChange();
        });
        
        $(document).on('change', '#userSelect', function (e) {
            refreshTable();
        });        
    });
    
    function queryParams(params) {
        $('#toolbar').find('input[name]').each(function () {
            params[$(this).attr('name')] = $(this).val();
        });
        limit = $('#table .page-size').html();
        if (limit){
            params.limit = limit;
        }    
        offset = $('#table li.page-number.active a').html();
        if (offset){
            params.offset = params.limit * (offset - 1);
        }    
        params.office = $('#officeSelect').val();
        params.user = $('#userSelect').val();
        params.status = $('#statusSelect').val();
        return params;
    }

    function rowStyle(row){
        var retired = 'tablerow';
        if (row.statusAccount == <?= Order::STATUS_TAKE_NO?>){
            return {classes: 'warning '+retired};
        }
        switch(row.status){
            case '<?= Order::STATUS_SHIPPED?>': 
                        return {classes: 'success '+retired}; break;
            case '<?= Order::STATUS_DELIVERY?>': 
                        return {classes: 'info '+retired}; break;
            case '<?= Order::STATUS_CONFIRMED?>': 
                        return {classes: retired, css: {"background-color": "linen"}}; break;
            case '<?= Order::STATUS_PROCESSED?>': 
                        return {classes: retired, css: {"background-color": "WhiteSmoke"}}; break;
            case '<?= Order::STATUS_CANCELED?>': 
                        return {classes: 'retired '+retired}; break;
            default:break;     
        }
        
        return {classes: retired};
    }
    
    function bidTakeStyle(row){
        var classes = 'default';
        if (row.take === "<?= Bid::TAKE_NO?>"){
            classes = 'warning';
        }        
        return {classes: classes};
    }    
    
    function goodFormatter(value, row){
        var url = '/goods/view/'+row.good.id;
        btn = '<nobr><a';
        btn += ' href="'+url+'"';
        btn += ' class="btn btn-link btn-xs" target="_blank">';
        btn += '<span class="glyphicon glyphicon-link"></span>';
        btn += '</a>'+value + '</nobr>';
        return btn;
    }    

    function geNameFormatter(value, row){
        if (value) return value;
        if (row.good.tokenGroup){
            if (row.good.tokenGroup.name) return row.good.tokenGroup.name;        
        }    
        if (row.good.name) return row.good.name; 
        if (row.good.description)return row.good.description;
        return 'Нет названия';
    }    

    function geAmountFormatter(value, row){
        return (Math.round(row.price*row.num*100)/100).toFixed(0);
    }        
    
    function grActiveFormatter(value, row){
        return [
            '<button type="button" title="Удалить"',
            'class="btn btn-default btn-xs table-row-remove"',
            '>',
            '<span class="glyphicon glyphicon-remove" aria-hidden="true"></span>',
            '</button>'
        ].join(' ');
    }    
    
    function dateFormatter(value){
        return '<nobr>'+$.format.date(value, "dd.MM.yy")+'</nobr>';        
    }

    function createdFormatter(value, row){
        return [
            '<nobr>',
            $.format.date(value, "dd.MM.yy HH:mm:ss"),
            '</nobr><br/>',
            (row.dateShipment) ? $.format.date(row.dateShipment, "dd.MM.yy"):''
        ].join('');
    }

    function idAplFormatter(value, row){
        var result = value;
        if (row.aplId){
            result += '<br/><a title="АПЛ ссылка" href="https://autopartslist.ru/admin/orders/view/id/' + row.aplId + '" target="_blank">' + row.aplId + '</a>';
        }
        return result;
    }    
    
    function officeUserFormatter(value, row){
        return [
            row.office.name,
            '<br/>',
            value
        ].join('');
    }    
    
    
    function aplLinkFormatter(value, row){
        if (value){
            return '<a title="АПЛ ссылка" href="https://autopartslist.ru/admin/orders/view/id/' + value + '" target="_blank">' + value + '</a>';
        }    
        return '';
    }    

    function clientFormatter(value, row){
        var result = [];
        var name = (value) ? value:'Nan';
        if (row.legal){
            name = row.legal.name;
        }
        result.push('<a style="text-transform:capitalize" href="/contact/view/' + row.contact.id + '" target="_blank">' + name + '</a>');

        if (row.dependInfo){
            var depend = $.parseJSON(row.dependInfo);
            var phones = [];

            $.each(depend.phones, function( index, phone ) {
                phones.push('<a href="#" class="sms-message-modal-show" modal-url="/sms/sms-form/" phone="'+phone.name+'" order-id="'+row.id+'">'+phone.name.replace(/(\d{3})(\d{3})(\d{4})/, '$1 $2-$3')+'</a>');
                if (phones.length > 1){
                    return false;
                }
            });

            var emails = [];
            $.each(depend.emails, function( index, email ) {
                emails.push('<a href="#" class="post-message-modal-show" modal-url="/post/post-form/" email="'+email.name+'" order-id="'+row.id+'">'+email.name+'</a>');
                return false;
            });

            var marketplaceOrders = [];
            if (depend.marketplaceOrders){
                marketplaceOrders.push('<a href="#" class="marketplace-orders-modal-show" modal-url="/market-place/order-form/" order-id="'+row.id+'" title="Заказы в ТП">('+depend.marketplaceOrders.length+')</a>');
                $.each(depend.marketplaceOrders, function( index, marketplaceOrder ) {
                    marketplaceOrders.push(marketplaceOrder.marketplaceName+': '+marketplaceOrder.postingNumber);
                    if (marketplaceOrders.length > 2){
                        return false;
                    }
                });
            }    
            
            if (phones.length || emails.length || marketplaceOrders.length){
                if (phones.length){
                    result.push('<br/>');
                    result.push(phones.join('; '));
                }    
                if (emails.length){
                    result.push('<br/>');
                    result.push('<nobr>'+emails.join('; ')+'</nobr>');
                }    
                if (marketplaceOrders.length){
                    result.push('<br/>');
                    result.push('<nobr>'+marketplaceOrders.join(' ')+'</nobr>');
                }    
            }    
        }    
        return result.join(' '); 
    }

    function infoFormatter(value, row){
        return value;
    }
    
    function carFormatter(value, row){
        var result = [];
        result.push(value);
        if (row.contactCar){
            if (row.contactCar.make){
                result.push(row.contactCar.make.name);
            }
        }
        return result.join(' ');
    }

    function shippingFormatter(value, row){
        var result = [];
        result.push(value);
        if (row.infoShipping){
            result.push(row.infoShipping);
        }
        if (row.shipmentTotal > 0){
            result.push(row.shipmentTotal);
        }
        if (row.skiper){
            result.push(row.skiper.fullName);
        }
        return result.join(' ');
    }

    function commentFormatter(value, row){
        var result = '';
        var userName = '';
        var created = '';
        var commentLength = 0;
        if (value){
            var depend = $.parseJSON(value);
            var comments = depend.comments;
            if (comments.length){
                commentLength = comments.length;
                $.each(comments, function( index, comment ) {
                    result = comment.comment;
                    userName = comment.userName;
                    created = comment.created;
                });
            }    
        }    
        
        return [
//            '<a href="#" class="order-comment-modal-show" modal-url="/comments/edit-local-form/" order-id="'+row.id+'" title="Добавить комментарий">(+)</a>',
            //'(' + value.length + ')',
            '<small><nobr>',
            $.format.date(created, "dd.MM.yy HH:MM:ss"),
            userName,
            '</small>',
            '</nobr><br/>',
            (commentLength) ? '<a href="#" class="comments-modal-show" modal-url="/comments/order-form/" order-id="'+row.id+'" title="Комментарии">('+commentLength+')</a>':'',
            result
        ].join(' ');
    }

    function linkFormatter(value, row){
        if (!value){
            value = '---';
        }
        return [
            '<div class="pull-left">',
            '<a href="/producer/view/' + row.id + '" target="_blank">' + value + '</a>',
            '</div>'
        ].join(''); 
    }    
    
    function amountFormatter(value){
        return Math.round(value*100)/100;
    }
    
    function inFormatter(value){
        if (value>0){
            return Math.round(value*100)/100;
        }
        return;
    }    
    
    function outFormatter(value){
        if (value<0){
            return -Math.round(value*100)/100;
        }
        return;
    }    
        
    function activeFormatter(value, row){
        var url = '<?= $this->url('order', ['action' => 'intro'])?>/'+value;
        btn = '<a';
        btn += ' type="button"';
        btn += ' href="'+url+'"';
        btn += ' target="_blank"';
        btn += ' class="btn btn-default btn-xs"';
        btn += ' aria-label="Left Align">'; 
        btn += '<span class="glyphicon glyphicon-edit" aria-hidden="true"></span>';
        btn += '</a>';

        return btn;
    }    
    
    function responseHandler(res) {
        return res;
    }    
    
    function changeOrderStatus(orderId, status){
        $.get( "/order/status/"+orderId+'?status='+status, function(data){
//            refreshTable();
            $table.bootstrapTable('updateByUniqueId', {id: orderId, row: data});
        });        
    }   

    var menu = new BootstrapMenu('.tablerow', {
        fetchElementData: function(rowElem) {
            var rowId = $(rowElem).attr('data-index');
            return $table.bootstrapTable('getData')[rowId];
        },
        actionsGroups: [
           ['selection'],
           ['addComment', 'comments', 'history'],
           ['addLegal', 'updateFromApl', 'sendToApl', 'duplicate'],
           ['vt', 'cash']
        ],      
        actions: {
            statusNew: {
                name: 'Новый',
                onClick: function(row) {
                    changeOrderStatus(row.id, <?= Order::STATUS_NEW?>);
                },
                isShown: function(row) {
                  return row.status != '<?= Order::STATUS_NEW?>';
                },
                isEnabled: function(row) {
                    return row.dateOper > '<?= $allowDate?>';
                }                
            }, 
            statusProcessed: {
                name: 'Обработан',
                classNames: 'bg-default',
                onClick: function(row) {
                    changeOrderStatus(row.id, <?= Order::STATUS_PROCESSED?>);
                },
                isShown: function(row) {
                  return row.status != '<?= Order::STATUS_PROCESSED?>';
                },
                isEnabled: function(row) {
                    return row.dateOper > '<?= $allowDate?>';
                }                
            }, 
            statusConfirmed: {
                name: 'Подтвержден',
                classNames: 'bg-warning',
                onClick: function(row) {
                    changeOrderStatus(row.id, <?= Order::STATUS_CONFIRMED?>);
                },
                isShown: function(row) {
                  return row.status != '<?= Order::STATUS_CONFIRMED?>';
                },
                isEnabled: function(row) {
                    return row.dateOper > '<?= $allowDate?>';
                }                
            }, 
            statusDelivery: {
                name: 'На доставке',
//                iconClass: 'glyphicon glyphicon-ok',
                classNames: 'bg-info',
                onClick: function(row) {
                    changeOrderStatus(row.id, <?= Order::STATUS_DELIVERY?>);
                },
                isShown: function(row) {
                  return row.status != <?= Order::STATUS_DELIVERY?>;
                },
                isEnabled: function(row) {
                    return row.dateOper > '<?= $allowDate?>';
                }                
            }, 
            statusShipped: {
                name: 'Отгружен',
                classNames: 'bg-success',
                onClick: function(row) {
                    changeOrderStatus(row.id, <?= Order::STATUS_SHIPPED?>);
                },
                isShown: function(row) {
                  return row.status != <?= Order::STATUS_SHIPPED?>;
                },
                isEnabled: function(row) {
                    return row.dateOper > '<?= $allowDate?>';
                }                
            },
            statusCanceled: {
                name: 'Отменен',
                classNames: 'bg-default',
                onClick: function(row) {
                    changeOrderStatus(row.id, <?= Order::STATUS_CANCELED?>);
                },
                isShown: function(row) {
                  return row.status != <?= Order::STATUS_CANCELED?>;
                },
                isEnabled: function(row) {
                    return row.dateOper > '<?= $allowDate?>';
                }                
            },
            selection: {
                name: 'Подбор',
                iconClass: 'glyphicon glyphicon-plus',
                onClick: function (row){
                    showFormDialog({
                        id: 'selectionModal',
                        url: '/order/selection-form/'+row.id,
                        zIndex: 0,
                        width: $(window).width()-50
                    });
                }
            },    
            addComment: {
                name: 'Добавить комментарий',
                iconClass: 'glyphicon glyphicon-plus',
                onClick: function (row){
                    var url = '/comments/edit-local-form/'+row.id;
                    showFormDialog({
                        id: 'orderCommentModal',
                        url: url,
                        zIndex: 9999,
                        width: $(window).width()-150
                    });
                }
            },    
            comments: {
                name: 'Комментарии',
                iconClass: 'glyphicon glyphicon-list-alt',
                onClick: function (row){
                    var url = '/comments/order-form/'+row.id;
                    showFormDialog({
                        id: 'orderCommentsModal',
                        url: url,
                        zIndex: 8888
                    });
                }
            },    
            history: {
                name: 'История',
                iconClass: 'glyphicon glyphicon-list-alt',
//                classNames: 'bg-danger',
                onClick: function(row) {
                    $.ajax({
                        type: "GET",
                        url: "/log/history/"+row.id+"?docType=ord",
                        success: function (result) {
                            bootbox.alert({
                                size: "large",
                                message: result
                            });
                        }
                    });                    
                }
            },
//            addMarketplaceNumber: {
//                name: 'Номер заказа в ТП',
//                iconClass: 'glyphicon glyphicon-plus',
//                onClick: function (row){
//                    var depend = $.parseJSON(row.dependInfo);
//                    var dialogId = 'marketplaceOrderModal';
//                    var url = '/market-place/marketplace-order-form?order='+row.id;
//                    var zIndex = 9999;
//                    if (depend.marketplaceOrders){
//                        if (depend.marketplaceOrders.length){
//                            var url = '/market-place/order-form/'+row.id;
//                            var dialogId = 'marketplaceOrdersModal';
//                            var zIndex = 8888;
//                        }    
//                    }
//                    
//                    showFormDialog({
//                        id: dialogId,
//                        url: url,
//                        zIndex: zIndex
//                    });
//                }
//            },    
            addLegal: {
                name: 'Юр. лицо',
                iconClass: 'glyphicon glyphicon-plus',
                onClick: function (row){
                    var url = '/order/order-legal-form/'+row.id;
                    showFormDialog({
                        id: 'orderLegalModal',
                        url: url,
                        width: '1000px',
                        zIndex: 9999
                    });    
                }
            },    
            updateFromApl: {
                name: 'Загрузить из Апл',
                iconClass: 'glyphicon glyphicon-arrow-down',
                onClick: function (row){
                    updateApl(row.id, '/apl/unload-order-id/'+row.id);
                },
                isEnabled: function(row) {
                    return row.aplId > 0;
                }                
            },    
            sendToApl: {
                name: 'Отправиь в Апл',
                iconClass: 'glyphicon glyphicon-arrow-up',
                onClick: function (row){
                    updateApl(row.id, '/apl/send-order-id/'+row.id);
                },
                isEnabled: function(row) {
                    return row.id > 0;
                }                
            },    
            duplicate: {
                name: 'Скопировать',
                iconClass: 'glyphicon glyphicon-duplicate',
                onClick: function (row){
                    duplicate(row.id, '/order/duplicate/'+row.id);
                },
                isEnabled: function(row) {
                    return row.id > 0;
                }                
            },    
            vt: {
                name: 'Возврат',
                iconClass: 'glyphicon glyphicon-repeat',
                onClick: function (row){
                    var url = '/vt/order-form/'+row.id;
                    showFormDialog({
                        id: 'vtIndexModal',
                        url: url,
                        zIndex: 8888,
                        width: '1440px'
                    });
                },
                isEnabled: function(row) {
                    return row.status == <?= Order::STATUS_SHIPPED?>;
                }                
            },
            cash: {
                name: 'Оплата',
                iconClass: 'glyphicon glyphicon-rub',
                onClick: function (row){
                    var url = '/comments/order-form/'+row.id;
                    showFormDialog({
                        id: 'orderCommentsModal',
                        url: url,
                        zIndex: 8888
                    });
                },
                isEnabled: function(row) {
                    return false;
                }                
            }
        }
    });    
    
</script>

