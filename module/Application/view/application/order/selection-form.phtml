<?php
use Application\Entity\Goods;

$form = $this->form;

$form->get('info')->setAttributes([
    'class'=>'form-control', 
    'rows' => 3,
    'placeholder' => 'Что нужно', 
    'value' => ($order) ? $order->getInfo():null,
    ]);

$form->get('oem')->setAttributes([
    'class'=>'form-control enter-add', 
    'placeholder' => 'Номер ОЕ',
    'onfocus' => "this.select();",
    ]);

$form->get('oemInfo')->setAttributes([
    'class'=>'form-control', 
    'onfocus' => "this.select();",
    'readonly' => 'true',
    ]);

$form->get('comment')->setAttributes([
    'class'=>'form-control', 
    ]);


$form->prepare();

?>
            
<?= $this->form()->openTag($form); ?>

<div class="modal-body">
    <div class="row">
        <div class="col-sm-6">                        
            <div class="form-group">
                <?//= $this->formLabel($form->get('info')); ?>
                <?= $this->formElement($form->get('info')); ?>
                <?= $this->formElementErrors($form->get('info')); ?>                  
            </div>
        </div>    
        <div class="col-sm-3">                        
            <div class="form-group form-group-sm">
                <?//= $this->formLabel($form->get('oem')); ?>
                <div class="input-group">
                    <?= $this->formElement($form->get('oem')); ?>
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-default btn-sm selection-add" title="Добавить ОЕ">
                            <span class="glyphicon glyphicon-plus"></span>
                        </button>
                    </span>    
                </div>    
                <?= $this->formElementErrors($form->get('oem')); ?>                  
            </div>
        </div>    
        <div class="col-sm-1">                        
            <div class="form-group form-group-sm">
                <?= $this->formElement($form->get('oemInfo')); ?>
            </div>
        </div>    
    </div>    
    <div class="row">
        <div class="col-sm-6">
            <div class="row">
                <div class="col-sm-12">
                    <div id="order-tab-content">
                        <table id="selectionGoodTable" class="table-bordered table-hover table-condensed"></table>
                    </div>                            
                </div>
            </div>                
        </div>
        <div class="col-sm-6">
            <ul id="selection-tab-list" class="nav nav-tabs" role="tablist">
            </ul>
            <div class="row">
                <div class="col-sm-12">
                    <!-- Tab panes -->
                    <div id="selection-tab-content" class="tab-content">
                    </div>        
                </div>
            </div>    
        </div>
    </div>   
</div>    
<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
    <button type="button" class="btn btn-primary selections-submit">Сохранить</button>
</div>


<?= $this->form()->closeTag(); ?>
            
<script>
    var selectionTabId = 0;
    var button = '<button class="close selection-close" type="button" title="Закрыть">×</button>';
                
    function upddateOrderGoodtable(){
        $('#ordergoodtable').bootstrapTable('load', $('#selectionGoodTable').bootstrapTable('getData'));
    }
    
    function submitSelectionForm(){
        var selections = [];
        $('.selection-name').each(function(){
           selections.push($(this).html()); 
        });
        
        if ($('#order-form').length){
            $('#order-form').find('input[name="selections"]').val(JSON.stringify(selections));
            upddateOrderGoodtable();
            $('#selectionModal').modal('hide');
        }    
        
        <?php if ($order): ?>
            var data = $('#selectionGoodTable').bootstrapTable('getData');
            var result = [];
            $.each( data, function( index, row ) {
                var newRow = {
                    good: row.good.id,
                    displayName: row.displayName,
                    num: row.num,
                    price: row.price,
                    oem: row.oem,
                    baseKey: row.baseKey
                };
                result.push(newRow);
            });   
    
            var dataPost = {bid: result, selections: selections};

            $.ajax({
                type: 'POST',
                url: '/order/selections-edit/<?= $order->getId()?>',
                data: $.param(dataPost)
            })
                .done(function (data) {
                    $('#table').bootstrapTable('updateByUniqueId', {id: <?= $order->getId()?>, row: data.row});
                })
                .fail(function () {
                    alert("Ошибка при записи данных.");

                })    
                .always(function () {
                    $('#selectionModal').modal('hide');
                });                
        <?php endif;?>                
    }

    function resetSelectionTab(){
            var tabs=$("#selection-tab-list li:not(:first)");
            var len=1;
            $(tabs).each(function(k,v){
                len++;
//                $(this).find('a').html('Tab ' + len + button);
            });
            selectionTabId--;
    }

    function updateGoodTableTotal(){
        var amount = 0;
        var data = $('#selectionGoodTable').bootstrapTable('getData');
        $.each(data, function( index, value ) {
            amount += Math.round(value.price*value.num*100)/100;
        });
//        console.log($('#selectionGoodTable').find('th[data-field="amount"]'));
        var totalNode = $('#selectionGoodTable').find('th[data-field="amount"]').find('.th-inner');
        totalNode.html(amount.toFixed(0));
        totalNode.css('text-align','right');
    }
    
    function addRowToOrderGoodTable(tableId, rowId){
        var oem = $("ul#selection-tab-list li.active").find('.selection-name').html();
        let row = $('#'+tableId).bootstrapTable('getRowByUniqueId', rowId);
        var good = {
            id: row.id,
            code: row.code,
            name: row.name,
            producer: {name: row.producer.name}
        };
        var newRow = {
            good: good,
            displayName: (row.tokenGroup) ? row.tokenGroup.name:row.name,
            amount: row.price,
            num: 1,
            price: row.price,
            oem: oem
        };

        var newRowNo = getNewTableUniqueId('selectionGoodTable', 'rowNo');
        newRow.rowNo = newRowNo;
//        console.log(newRow);
        var rows = [];
        rows.push(newRow);
        $('#selectionGoodTable').bootstrapTable('prepend', rows); 
        updateGoodTableTotal();
    }
    
    function removeSelectionTableRowByUniqueId(index){
        $('#selectionGoodTable').bootstrapTable('removeByUniqueId', index);
//        orderUpdateTotal();
    }

    function selectionGoodTable(){
        var data = '';
        if ($('#order-form').length){
            data = $('#ordergoodtable').bootstrapTable('getData');
        }    
        $('#selectionGoodTable').bootstrapTable({
            idField: 'rowNo',
            uniqueId: 'rowNo',
            pagination: true,
//            reorderableRows: true,
            columns: [{
                field: 'rowNo', title: 'N'
            }, {
                field: 'good.code',title: 'Артикул', formatter: 'goodFormatter'
            }, {
                field: 'good.producer.name',title: 'Производитель'
            }, {
                field: 'displayName',title: 'Наименование', editable: true 
            }, {
                field: 'good.id',title: '', formatter: 'soFormatter', width: 10
            }, {
                field: 'price',title: 'Цена', align: 'right', formatter: 'gePriceFormatter'
            }, {
                field: 'num',title: 'Кол-во', align: 'right', editable: true
            }, {
                field: 'amount',title: 'Сумма', align: 'right', formatter: 'geAmountFormatter'
            }, {
                field: 'rowNo',title: '', formatter: 'stActiveFormatter', width: 10
            }, {
                field: 'oem',title: 'OE', visible: false
            }],
            onPostBody: function(res){
                $('#selectionGoodTable').on('editable-save.bs.table', function (e, field, row, old, $el) {
                    updateGoodTableTotal();
                });               
            },
            <?php if ($order): ?>
                url: '/order/good-content/<?= $order->getId() ?>',
                onLoadSuccess: function(res){
                    updateGoodTableTotal();
                }                         
            <?php else: ?>                
                data: data
            <?php endif; ?>    
        });   
        
        updateGoodTableTotal();
    }
    
    function addSelectedTable(selectionTableId, tabName){
        $('#'+selectionTableId).bootstrapTable({
            idField: 'id',
            uniqueId: 'id',
            pagination: true,
            search: false,
            showRefresh: true,
            url: '/goods/content?opts=1&accurate=<?= Goods::SEARCH_OE?>&search='+tabName,
            buttonsPrefix: 'btn-xs btn',
            columns: [{
                field: 'id', title: '', formatter: 'stAddFormatter', width: 10
            }, {
                field: 'code',title: 'Артикул', formatter: 'stGoodFormatter'
            }, {
                field: 'producer.name',title: 'Производитель'
            }, {
                field: 'name',title: 'Наименование', formatter: 'stNameFormatter'
            }, {
                field: 'id',title: '', formatter: 'soFormatter', width: 10
            }, {
                field: 'price',title: 'Цена', align: 'right'
            }, {
                field: 'id',title: 'Кнопки'
            }],
            //data: data,
            onLoadSuccess: function(res){
                $('#'+selectionTableId).find('.add-good-selections').on('click', function(){
                    var tableId = $(this).closest('table').attr('id');
                    var rowId = $(this).closest('tr').attr('data-uniqueid');
                    addRowToOrderGoodTable(tableId, rowId);
                });
            }
        });
    }
    
    function addSelectedTab(selectionTabId, tabName){
        let selectionTableId = 'st'+selectionTabId;
        $('#selection-tab-list').append($('<li><a href="#selection-tab' + selectionTabId + '" role="tab" data-toggle="tab"><span class="selection-name">' + tabName + '</span><button class="close selection-close" type="button" title="Закрыть">×</button></a></li>'));
        $('#selection-tab-content').append($('<div class="tab-pane fade" id="selection-tab' + selectionTabId + '"><table id="' + selectionTableId + '" class="table-bordered table-hover table-condensed"></table></div>'));
        $('input[name="oem"]').val('');
        addSelectedTable(selectionTableId, tabName);
    }
    
    function selectionAdd(){
        let tabName = $('input[name="oem"]').val(); 
        if (tabName){
            selectionTabId++;
            addSelectedTab(selectionTabId, tabName);
            $('#selection-tab-list a[href="#selection-tab'+selectionTabId+'"]').tab('show'); 
            $('input[name="oemInfo"]').val(tabName);
        }    
    }

    $(document).ready(function() {
        
        $('.enter-add').on('keydown', function(e){
//            console.log(e.keyCode);
            if (e.keyCode === 13) {
                selectionAdd();
            }
        });
        
        $('.selection-modal-show').attr('disabled', false);
                
        $('.selection-name').click(function(){
            console.log($(this).html());
        });        

        $('.selections-submit').click(function(){
            submitSelectionForm();
        });        
        
        $('.selection-add').click(function() {
            selectionAdd();
        });

        $('#selection-tab-list').on('click', '.selection-close', function() {
            var selectionTabId = $(this).parents('a').attr('href');
            $(this).parents('li').remove();
            let selectionTableId = 'st'+selectionTabId;
            $('#'+selectionTableId).bootstrapTable('destroy');
            $(selectionTabId).remove();

            //display first tab
            var tabFirst = $('#selection-tab-list a:first');
            if (tabFirst){
                resetSelectionTab();
                tabFirst.tab('show');
            }    
        });
        
        $('#selection-tab-list').on('click', '.selection-name', function() {
            $('input[name="oemInfo"]').val($(this).html());
        });

        selectionGoodTable();
        var inputSelections = '';
        if ($('#order-form').length){
            $('#selection-form').find('textarea[name="info"]').val($('#order-form').find('textarea[name="info"]').val());

            inputSelections = $('#order-form').find('input[name="selections"]').val();
//            console.log(inputSelections);
        }    
        
        <?php if ($order):?>
            inputSelections = '<?= $order->getSelectionsAsString() ?>';   
//            console.log(inputSelections);
        <?php endif; ?>        
        
        if (inputSelections){
            let selections = $.parseJSON(inputSelections);
            if ($.isArray(selections)){
                $.each(selections, function(key, tabName){
                    selectionTabId++;
                    addSelectedTab(selectionTabId, tabName);
                });
                $('#selection-tab-list a:first').tab('show');
            }
        }
    });    
    
    function stGoodFormatter(value, row){
        var url = '/goods/view/'+row.id;
        btn = '<nobr><a';
        btn += ' href="'+url+'"';
        btn += ' class="btn btn-link btn-xs" target="_blank">';
        btn += '<span class="glyphicon glyphicon-link"></span>';
        btn += '</a>'+value + '</nobr>';
        return btn;
    }    

    function stNameFormatter(value, row){
        if (row.tokenGroup){
            return row.tokenGroup.name;
        }
        if (row.name){
            return row.name;
        }        
        if (row.description){
            return row.description;
        }
        return 'Нет названия';
    }
    
    function stAddFormatter(value, row){
        let btn = '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-default btn-xs add-good-selections"';
        btn += ' aria-label="Left Align"'; 
        btn += ' title="Добавить"'; 
        btn += ' >';
        btn += '<span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>';
        btn += '</button>';
        return btn;
    }    

    function stActiveFormatter(value, row){
        let btn = '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-default btn-xs"';
        btn += ' aria-label="Left Align"'; 
        btn += ' title="Удалить"'; 
        btn += ' onclick="removeSelectionTableRowByUniqueId('+value+')">';
        btn += '<span class="glyphicon glyphicon-trash" aria-hidden="true"></span>';
        btn += '</button>';
        return btn;
    }  
    
    function soFormatter(value, row){
        btn = '<span class="text-nowrap">';
        btn += '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-default btn-xs supplier-list"';
        btn += ' aria-label="Center Align"'; 
        btn += ' title="Доступные поставщики"'; 
        btn += ' onclick="goodSuppliers('+value+')">';
        btn += '<span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>';
        btn += '</button>';

        btn += ' <button';
        btn += ' type="button"';
        btn += ' class="btn btn-default btn-xs supplier-list"';
        btn += ' aria-label="Center Align"'; 
        btn += ' title="Оригинальные номера"'; 
        btn += ' onclick="oems('+value+')">';
        btn += '<span class="glyphicon" aria-hidden="true">OE</span>';
        btn += '</button>';
        btn += '</span>';
        return btn;
    }        
    
</script>