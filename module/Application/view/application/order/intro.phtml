<?php

//https://stackoverflow.com/questions/48570153/populate-bootstraptable-x-editable-select-box-based-on-another-column
use Application\Entity\Order;
use Application\Entity\Shipping;

$this->headTitle(($orderId)?$orderId:'Новый');

$this->mainMenu()->setActiveItemId('client');
$this->mainMenu()->setActiveUrl($this->url('order'));


$form = $this->form;

$form->get('office')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Офис',
    ]);

$form->get('user')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Менеджер',
    ]);

$form->get('aplId')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Номер АПЛ',
    'style' => 'width:100px',
    ]);

$form->get('skiper')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Водитель',
    ]);

$form->get('name')->setAttributes([
    'class'=>'form-control', 
    'style' => "text-transform:capitalize",
    'placeholder' => 'Имя',
    'required' => true,
    ]);

$form->get('phone')->setAttributes([
    'class'=>'form-control phone', 
    'placeholder' => 'Телефон',
    'required' => true,
    ]);

$form->get('phone2')->setAttributes([
    'class'=>'form-control phone', 
    'placeholder' => 'Телефон дополнительный',
    ]);

$form->get('email')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Email',
    ]);

$form->get('info')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Что нужно',
    'rows' => 4,
    ]);

$form->get('dateShipment')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Дата доставки/самовывоза',
    'title' => 'Дата доставки/самовывоза',
    'min' => ($orderId)? null:date('Y-m-d'),
    ]);

$form->get('timeShipment')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Время доставки/самовываза',
    'title' => 'Время доставки/самовывоза',
    ]);

$form->get('shipping')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Вариант доставки',
    ]);

$form->get('shipmentTotal')->setAttributes([
    'class'=>'form-control  select-on-focus', 
    'placeholder' => 'Стоимость доставки',
    ]);

$form->get('infoShipping')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Комментарий к доставке',
    ]);

$form->get('trackNumber')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Накладная ТК',
    ]);

$form->get('courier')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'ТК',
    ]);

$form->get('shipmentDistance')->setAttributes([
    'class'=>'form-control select-on-focus', 
    'placeholder' => 'КМ',
    ]);

$form->get('address')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Адрес доставки',
    'rows' => 1,
    ]);

$form->get('vin')->setAttributes([
    'class' => 'form-control', 
    'style' => "text-transform:uppercase",
    'placeholder' => 'VIN',
    ]);

$form->get('make')->setAttributes([
    'class'=>'form-control', 
    'style' => "text-transform:none",
    'data-provide' => "typeahead",
    'placeholder' => 'Марка машины',
    ]);

$form->get('makeComment')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Дополнительно о машине',
    ]);

$form->get('note')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Комментарий менеджера',
    ]);

$form->get('legalName')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Наименование ЮЛ',
    ]);

$form->get('legalInn')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'ИНН ЮЛ',
    ]);

$form->get('legalKpp')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'КПП ЮЛ',
    ]);

$form->get('legalOgrn')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'ОГРН ЮЛ',
    ]);

$form->get('legalAddress')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Местонахождение ЮЛ',
    ]);

$form->get('recipientName')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Грузополучатель',
    ]);

$form->get('recipientInn')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'ИНН Грузополучателя',
    ]);

$form->get('recipientKpp')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'КПП Грузополучателя',
    ]);

$form->get('recipientOgrn')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'ОГРН Грузополучателя',
    ]);

$form->get('recipientAddress')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Местонахождение Грузополучателя',
    ]);

$form->get('rs')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Расчетный счет',
    ]);

$form->get('ks')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Корр. счет',
    ]);

$form->get('bik')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'БИК банка',
    ]);

$form->get('bankName')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Наименование банка',
    ]);

$form->get('bankCity')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Город банка',
    ]);

$form->get('invoiceInfo')->setAttributes([
    'class'=>'form-control', 
    'placeholder' => 'Комментарий к счету',
    ]);

$form->get('status')->setAttributes([
    'class'=>'form-control', 
    ]);

$form->get('submit')->setAttributes(['class'=>'btn btn-primary', 'value' => 'Сохранить', 'id' => 'order-submit']);

$form->prepare();

?>
            
<?= $this->form()->openTag($form); ?>
<div class="row">
    <div class="col-xs-11">
        <div class="row">
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('phone')); ?>
                    <div class="input-group">
                        <?= $this->formElement($form->get('phone')); ?>
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-default btn-sm sms-message-modal-show" modal-url="/admin/sms-form/" title="Отправить сообщение">
                                <span class="glyphicon glyphicon-envelope"></span>
                            </button>
                        </span>    
                    </div>    
                    <?php echo $this->partial('/admin/index/sms-partial', ['phoneNode' => 'phone', 'idNode' => 'orderId']); ?>
                    <?= $this->formElementErrors($form->get('phone')); ?>                  
                </div>
            </div>    
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('name')); ?>
                    <?= $this->formElement($form->get('name')); ?>
                    <?= $this->formElementErrors($form->get('name')); ?>                  
                </div>
            </div>    
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('email')); ?>
                    <div class="input-group">
                        <?= $this->formElement($form->get('email')); ?>
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-default btn-sm post-message-modal-show" modal-url="/post/post-form/" title="Отправить сообщение">
                                <span class="glyphicon glyphicon-envelope"></span>
                            </button>
                        </span>    
                    </div>    
                    <?php echo $this->partial('/admin/post/post-partial', ['emailNode' => 'email', 'idNode' => 'orderId']); ?>
                    <?= $this->formElementErrors($form->get('email')); ?>                  
                </div>
            </div>    
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('office')); ?>
                    <?= $this->formElement($form->get('office')); ?>
                    <?= $this->formElementErrors($form->get('office')); ?>                  
                </div>
            </div>    
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('user')); ?>
                    <?= $this->formElement($form->get('user')); ?>
                    <?= $this->formElementErrors($form->get('user')); ?>                  
                </div>
            </div>    
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('status')); ?>
                    <?= $this->formElement($form->get('status')); ?>
                    <?= $this->formElementErrors($form->get('status')); ?>                  
                </div>
            </div>    
        </div>    
        <div class="row">
            <div class="col-xs-3">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('vin')); ?>
                    <div class="input-group">
                        <?= $this->formElement($form->get('vin')); ?>
                        <div class="input-group-addon" id="vinLength">0</div>
                    </div>
                    <?= $this->formElementErrors($form->get('vin')); ?>                  
                </div>
            </div>    
            <div class="col-xs-3">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('make')); ?>
                    <?= $this->formElement($form->get('make')); ?>
                    <?= $this->formElementErrors($form->get('make')); ?>                  
                </div>
            </div>                    
            <div class="col-xs-6">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('makeComment')); ?>
                    <?= $this->formElement($form->get('makeComment')); ?>
                    <?= $this->formElementErrors($form->get('makeComment')); ?>                  
                </div>
            </div>                            
        </div>
        <div class="row">
            <div class="col-xs-6">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('info')); ?>
                    <?= $this->formElement($form->get('info')); ?>
                    <?= $this->formElementErrors($form->get('info')); ?>                  
                </div>
            </div>                    
            <div class="col-xs-5">     
                <div class="form-group form-group-sm">
                    <?php echo $this->partial('/application/comment/order-partial', ['comments' => $comments]); ?>
                </div>    
            </div>    
            <div class="col-xs-1 text-right">     
                <div class="form-group form-group-sm">
                    <button type="button" class="btn btn-default btn-sm order-comment-modal-show" 
                            title="Добавить комментарий" modal-url="/comments/edit-local-form">
                        <span class="glyphicon glyphicon-plus"></span>
                    </button>
                </div>
            </div>    
        </div>        
        <div class="row">
            <div class="col-xs-12">
                <div id="ordergoodtoolbar">
                    <div class="form-inline" role="form">
                        <div class="form-group form-group-sm">
                            <span class="label label-default" id="orderQuantity"></span>
                        </div>    
                        <div class="form-group form-group-sm">
                            <span class="label label-primary" id="shippingTotal"></span>
                        </div> +    
                        <div class="form-group form-group-sm">
                            <span class="label label-primary" id="bidTotal"></span>
                        </div> =   
                        <div class="form-group form-group-sm">
                            <span class="label label-primary" id="orderAmount"></span>                        
                        </div>    
                        <div class="form-group form-group-sm">
                            <button type="button" class="btn btn-default btn-sm order-good-modal-show" modal-url="/order/good-edit-form" title="Добавить товар">
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                            </button>
                        </div>    
                    </div>
                </div>
                <table id="ordergoodtable" 
                    data-toggle="ordergoodtable" 
                    data-url="/order/good-content/<?= ($orderId) ? $orderId:""?>"
                    data-side-pagination="client"
                    data-pagination="true"
                    data-icon-size="sm"
                    data-page-size = "100"
                    data-page-list="[100, 200]"
                    data-toolbar="#ordergoodtoolbar"
                    data-toolbar-align="right"
                    data-query-params="ordergoodQueryParams"
                    data-response-handler="ordergoodResponseHandler"
                    data-classes = "table table-bordered table-hover table-condensed"
                    data-unique-id = "rowNo"                
                    data-use-row-attr-func="true"
                    data-reorderable-rows="true"                    >
                    <thead>
                        <tr>
                             <th data-field="rowNo" data-type="numeric" data-align="right" data-width="10">N</th>
                             <th data-field="good.code" data-width="150" data-formatter="goodFormatter">Артикул</th>
                             <th data-field="good.producer.name" data-type="numeric" data-width="100">Производитель</th>
                             <th data-field="displayName" data-formatter="geNameFormatter" data-editable="true">Наименование</th>
                             <th data-field='opts' data-align="right" data-editable="true" data-editable-type="select" data-type="numeric" data-width="50">Опт</th>
                             <th data-field='price' data-formatter="gePriceFormatter" data-editable="true" data-type="numeric" data-always-use-formatter="true" data-align="right" data-width="100">
                                 <button type="button" class="btn btn-info btn-xs price-select-btn">0</button>
                                 <button type="button" class="btn btn-default btn-xs price-select-btn">1</button>
                                 <button type="button" class="btn btn-default btn-xs price-select-btn">2</button>
                                 <button type="button" class="btn btn-default btn-xs price-select-btn">3</button>
                                 <button type="button" class="btn btn-default btn-xs price-select-btn">4</button>
                                 <button type="button" class="btn btn-default btn-xs price-select-btn">5</button>
                             </th>
                             <th data-field='num' data-align="right" data-editable="true" data-type="numeric" data-always-use-formatter="true" data-width="50">Кол-во</th>
                             <th data-field='amount' data-align="right" data-formatter="geAmountFormatter" data-always-use-formatter="true" data-type="numeric" data-width="100">Сумма</th>
                             <th data-field="rowNo" data-formatter="geActiveFormatter" data-width="10"></th>
                             <th data-field="rowNo" data-formatter="grActiveFormatter" data-width="10"></th>
                         </tr>                
                    </thead>
                </table>
            </div>
        </div>    
        <hr/>
        <div class="row">
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('dateShipment')); ?>
                    <?= $this->formElement($form->get('dateShipment')); ?>
                    <?= $this->formElementErrors($form->get('dateShipment')); ?>                  
                </div>
            </div>
            <div class="col-xs-1">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('timeShipment')); ?>
                    <?= $this->formElement($form->get('timeShipment')); ?>
                    <?= $this->formElementErrors($form->get('timeShipment')); ?>                  
                </div>
            </div>
            <div class="col-xs-3">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('shipping')); ?>
                    <?= $this->formElement($form->get('shipping')); ?>
                    <?= $this->formElementErrors($form->get('shipping')); ?>                  
                </div>
            </div>
            <div class="col-xs-1">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('shipmentDistance')); ?>
                    <?= $this->formElement($form->get('shipmentDistance')); ?>
                    <?= $this->formElementErrors($form->get('shipmentDistance')); ?>                  
                </div>
            </div>
            <div class="col-xs-1">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('shipmentTotal')); ?>
                    <?= $this->formElement($form->get('shipmentTotal')); ?>
                    <?= $this->formElementErrors($form->get('shipmentTotal')); ?>                  
                </div>
            </div>
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('courier')); ?>
                    <?= $this->formElement($form->get('courier')); ?>
                    <?= $this->formElementErrors($form->get('courier')); ?>                  
                </div>
            </div>
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('trackNumber')); ?>
                    <?= $this->formElement($form->get('trackNumber')); ?>
                    <?= $this->formElementErrors($form->get('trackNumber')); ?>                  
                </div>
            </div>
        </div>        
        <div class="row">
            <div class="col-xs-8">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('address')); ?>
                    <?= $this->formElement($form->get('address')); ?>
                    <?= $this->formElementErrors($form->get('address')); ?>                  
                </div>
            </div>
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('phone2')); ?>
                    <?= $this->formElement($form->get('phone2')); ?>
                    <?= $this->formElementErrors($form->get('phone2')); ?>                  
                </div>
            </div>    
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('skiper')); ?>
                    <?= $this->formElement($form->get('skiper')); ?>
                    <?= $this->formElementErrors($form->get('skiper')); ?>                  
                </div>
            </div>    
        </div>        
        <div class="row">
            <div class="col-xs-12">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('infoShipping')); ?>
                    <?= $this->formElement($form->get('infoShipping')); ?>
                    <?= $this->formElementErrors($form->get('infoShipping')); ?>                  
                </div>
            </div>
        </div>    
        <hr/>
        <div class="row legal">
            <div class="col-xs-3">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('legalInn')); ?>
                    <span class="input-group">
                        <?= $this->formElement($form->get('legalInn')); ?>
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-default btn-sm inn-fill" target-group="legal" data-toggle="tooltip" title="Заполнить по ИНН">
                                <span class="glyphicon glyphicon-search"></span>
                            </button>
                            <button type="button" class="btn btn-default btn-sm inn-clear" target-group="legal" data-toggle="tooltip" title="Очистить">
                                <span class="glyphicon glyphicon-remove-circle"></span>
                            </button>
                        </span>    
                    </span>    
                    <?= $this->formElementErrors($form->get('legalInn')); ?>                  
                </div>
            </div>
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('legalKpp')); ?>
                    <?= $this->formElement($form->get('legalKpp')); ?>
                    <?= $this->formElementErrors($form->get('legalKpp')); ?>                  
                </div>
            </div>    
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('legalOgrn')); ?>
                    <?= $this->formElement($form->get('legalOgrn')); ?>
                    <?= $this->formElementErrors($form->get('legalOgrn')); ?>                  
                </div>
            </div>    
            <div class="col-xs-5">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('legalName')); ?>
                    <?= $this->formElement($form->get('legalName')); ?>
                    <?= $this->formElementErrors($form->get('legalName')); ?>                  
                </div>
            </div>    
        </div>            
        <div class="row">
            <div class="col-xs-12">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('legalAddress')); ?>
                    <?= $this->formElement($form->get('legalAddress')); ?>
                    <?= $this->formElementErrors($form->get('legalAddress')); ?>                  
                </div>
            </div>
        </div>    
        <div class="row">
            <div class="col-xs-12">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('invoiceInfo')); ?>
                    <?= $this->formElement($form->get('invoiceInfo')); ?>
                    <?= $this->formElementErrors($form->get('invoiceInfo')); ?>                  
                </div>
            </div>
        </div>    
        <hr/>
        <div class="row bank-account">
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('rs')); ?>
                    <?= $this->formElement($form->get('rs')); ?>
                    <?= $this->formElementErrors($form->get('rs')); ?>                  
                </div>
            </div>
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('bik')); ?>
                    <div class="input-group">
                        <?= $this->formElement($form->get('bik')); ?>
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-default btn-sm bik-fill" data-toggle="tooltip" target-name="bik" title="Заполнить из справочника БИК">
                                <span class="glyphicon glyphicon-search"></span>
                            </button>
                            <button type="button" class="btn btn-default btn-sm bik-clear" data-toggle="tooltip" title="Очистить">
                                <span class="glyphicon glyphicon-remove-circle"></span>
                            </button>
                        </span>    
                    </div>    
                    <?= $this->formElementErrors($form->get('bik')); ?>                  
                </div>
            </div>    
            <div class="col-xs-4">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('bankName')); ?>
                    <?= $this->formElement($form->get('bankName')); ?>
                    <?= $this->formElementErrors($form->get('bankName')); ?>                  
                </div>
            </div>    
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('bankCity')); ?>
                    <?= $this->formElement($form->get('bankCity')); ?>
                    <?= $this->formElementErrors($form->get('bankCity')); ?>                  
                </div>
            </div>    
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('ks')); ?>
                    <?= $this->formElement($form->get('ks')); ?>
                    <?= $this->formElementErrors($form->get('ks')); ?>                  
                </div>
            </div>    
        </div>          
        <hr/>
        <div class="row recipient">
            <div class="col-xs-3">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('recipientInn')); ?>
                    <span class="input-group">
                        <?= $this->formElement($form->get('recipientInn')); ?>
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-default btn-sm inn-fill" target-group="recipient" data-toggle="tooltip" title="Заполнить по ИНН">
                                <span class="glyphicon glyphicon-search"></span>
                            </button>
                            <button type="button" class="btn btn-default btn-sm inn-clear" target-group="recipient" data-toggle="tooltip" title="Очистить">
                                <span class="glyphicon glyphicon-remove-circle"></span>
                            </button>
                        </span>    
                    </span>    
                    <?= $this->formElementErrors($form->get('recipientInn')); ?>                  
                </div>
            </div>
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('recipientKpp')); ?>
                    <?= $this->formElement($form->get('recipientKpp')); ?>
                    <?= $this->formElementErrors($form->get('recipientKpp')); ?>                  
                </div>
            </div>    
            <div class="col-xs-2">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('recipientOgrn')); ?>
                    <?= $this->formElement($form->get('recipientOgrn')); ?>
                    <?= $this->formElementErrors($form->get('recipientOgrn')); ?>                  
                </div>
            </div>    
            <div class="col-xs-5">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('recipientName')); ?>
                    <?= $this->formElement($form->get('recipientName')); ?>
                    <?= $this->formElementErrors($form->get('recipientName')); ?>                  
                </div>
            </div>    
        </div>            
        <div class="row">
            <div class="col-xs-12">                        
                <div class="form-group form-group-sm">
                    <?//= $this->formLabel($form->get('recipientAddress')); ?>
                    <?= $this->formElement($form->get('recipientAddress')); ?>
                    <?= $this->formElementErrors($form->get('recipientAddress')); ?>                  
                </div>
            </div>
        </div>    
        <?php echo $this->partial('/company/legal/bik-inn-partial', []); ?>
    </div>
    <div class="col-sm-1">
        <div class="list-group" data-spy="affix" data-offset-top="20">        
            <div class="form-group form-group-sm">
                <?//= $this->formLabel($form->get('aplId')); ?>
                <?= $this->formElement($form->get('aplId')); ?>
                <?= $this->formElementErrors($form->get('aplId')); ?>                  
            </div>
            <button type="button" class="btn btn-primary btn-sm btn-block" id="order-submit">Сохранить</button>    
            <button type="button" class="btn btn-secondary btn-sm btn-block" id="order-reset">Закрыть</button>
            <button type="button" class="btn btn-secondary btn-sm btn-block" onclick="prnt('/print/check/<?= $orderId?>?ext=Html')">
                Товарный чек
            </button>
            <a type="button" class="btn btn-secondary btn-sm btn-block" href="/print/order-bill/<?= $orderId?>?ext=Pdf" target="_blank">
                Счет
            </a>
            <a type="button" class="btn btn-secondary btn-sm btn-block" href="/print/order-bill/<?= $orderId?>?ext=Pdf&stamp=1" target="_blank">
                Счет с печатью
            </a>
            <a type="button" class="btn btn-secondary btn-sm btn-block" href="/print/torg12/<?= $orderId?>?ext=Pdf" target="_blank">
                Торг-12
            </a>
            <a type="button" class="btn btn-secondary btn-sm btn-block" href="/print/act/<?= $orderId?>?ext=Pdf" target="_blank">
                Акт на доставку
            </a>
            <a type="button" class="btn btn-secondary btn-sm btn-block" href="/print/preorder/<?= $orderId?>?ext=Pdf" target="_blank">
                Предзаказ
            </a>
            <a type="button" class="btn btn-secondary btn-sm btn-block" href="/print/offer/<?= $orderId?>?ext=Pdf" target="_blank">
                Предложение
            </a>
        </div>    
    </div>
</div>    

<?= $this->formElement($form->get('orderId')); ?>            
<?= $this->formElement($form->get('contact')); ?>            
<?= $this->formElement($form->get('contactCar')); ?>            
<?= $this->formElement($form->get('rate')); ?>            
<?= $this->formElement($form->get('shipmentRate')); ?>            
<?= $this->formElement($form->get('shipmentRate1')); ?>            
<?= $this->formElement($form->get('shipmentRate2')); ?>            
<?= $this->formElement($form->get('shippingLimit1')); ?>            
<?= $this->formElement($form->get('shippingLimit2')); ?>            
<?= $this->formElement($form->get('rateDistance')); ?>            
<?= $this->formElement($form->get('legal')); ?>            
<?= $this->formElement($form->get('recipient')); ?>            
<?= $this->formElement($form->get('bankAccount')); ?>            
<?//= $this->formElement($form->get('csrf')); ?>            
<?= $this->form()->closeTag(); ?>
            
<script>
    var $table = $('#ordergoodtable');
    
    set_onbeforeunload = function(){
            return true;
    };
    
    function setTextValue(node, value, clear = false)
    {
        if (!$(node).val()){
            $(node).val(value);
//            if (clear){
//                $(node).next().toggle(Boolean($(node).val()));
//            }    
        }           
    }

    $('.phone').on('input', function(){
        var value = $( this ).val();
        if (value.length == 16){
            $.post('/ring/find-phone', {phone: value}, function (data) {
                if (data){
                    setTextValue('#contact', data.contact);
                    setTextValue('#name', data.name, true);
                    setTextValue('#email', data.email, true);
                    if (data.cars){
                        setTextValue('input[name="contactCar"]', data.cars[0].id);
                        setTextValue('input[name="vin"]', data.cars[0].vin, true);
                        $("#vinLength").html($('input[name="vin"]').val().length);
                        setTextValue('input[name="make"]', data.cars[0].makeName, false);
                        setTextValue('input[name="makeComment"]', data.cars[0].comment, false);
                    }    
//                        $.each(data.cars, function( i, car ){
//                        });                    
                }    
            })
        }    
    });    
    
    $('input[name="vin"]').on('input', function(){
        $("#vinLength").html($('input[name="vin"]').val().length);
    });
    
    $('input[name="make"]').typeahead({
        source: function(query, process) {
            return $.get("/make/autocomplete?q="+query, function (data) {
                return process(data);
            });
        },
        changeInputOnSelect: true,
    });
    
    $(document).on('click', '.order-good-modal-show', function (e) {
        var url = $(e.currentTarget).attr('modal-url');
        var uniqueId = $(e.currentTarget).attr('unique-id');
        if (uniqueId){
            var row = $('#ordergoodtable').bootstrapTable('getRowByUniqueId', uniqueId);
            url = url+'?'+$.param(row);
        }    
        showFormDialog({
            id: 'orderGoodModal',
            url: url,
            zIndex: 9999
        });
    });  
        
    function submitForm(){
        window.onbeforeunload = false;
        $(".has-error").each(function( index ) {
            $(this).removeClass('has-error');
        });    
        var data = serializeForm('#order-form');
        data.orderGood = getFormatedOrderGood();
        data.comments = getUnsavedOrderComments();
        $.ajax({
            type: 'POST',
            url: '/order/intro/'+$('#orderId').val(),
            data: $.param(data)
        })
            .done(function (data) {
                if (data.id){
                    document.title = data.id;
                    let reload = $('#orderId').val() == '';
                    $('#orderId').val(data.id);
                    $('#aplId').val(data.aplId);
                    $('#contact').val(data.contact);
                    $('#legal').val(data.legal);
                    $('#recipient').val(data.recipient);
                    $('#bankAccount').val(data.bankAccount);
                    enableSms();
                    enablePost();
                    console.log(reload);
                    if (reload && data.id){
                        window.location.href = '/order/intro/'+data.id;
                    }
                }
                if (data.error){
                    var errorFields = '';
                    $.each( data.error, function( key, value ) {
                        $('input[name="'+key+'"]').parents('.form-group').addClass('has-error');
                        errorFields += $('input[name="'+key+'"]').attr('placeholder')+' ';
                    });    
                    alert('Не сохранено! Ошибка в поле '+errorFields.trim());                    
                }
            })
            .fail(function () {
                alert("Ошибка при открытии формы.");

            })    
            .always(function () {
                $('#order-submit').attr('disabled', false);
            });    
    };
    
    function getFormatedOrderGood(){
        var data = $table.bootstrapTable('getData');
        var result = [];
        $.each( data, function( index, row ) {
            var newRow = {
                good: row.good.id,
                displayName: row.displayName,
                num: row.num,
                price: row.price
            };
            result.push(newRow);
        });   
        return result;
    }

    function getUnsavedOrderComments(){
        var result = [];
        $(".new-manager-comment").each(function( index ) {
            if ($(this).text()){
                var newComment = {
                    comment: $(this).text(),
                };
                result.push(newComment);
            }
            $(this).removeClass('new-manager-comment');
        });        
        return result;
    }

    function bidTotal(){
        var amount = 0;
        var data = $table.bootstrapTable('getData');
        $.each(data, function( index, value ) {
            amount += Math.round(value.price*value.num*100)/100;
        });
        $('#bidTotal').html(amount);            
        return amount;
    }
    
    function shippingUpdate(){
        let rate = Number($('#rate').val());
        let shipmentRate = Number($('#shipmentRate').val());
        let shipmentRate1 = Number($('#shipmentRate1').val());
        let shipmentRate2 = Number($('#shipmentRate2').val());
        let shippingLimit1 = Number($('#shippingLimit1').val());
        let shippingLimit2 = Number($('#shippingLimit2').val());
        let rateDistance = Number($('#rateDistance').val());
        let distance = Number($('#shipmentDistance').val());
        let totalBid = bidTotal();
        if (rate != <?= Shipping::RATE_TK?>){
            if (shippingLimit1 > 0 && totalBid>=shippingLimit1){
                shipmentRate=shipmentRate1;
            }
            if (shippingLimit2 > 0 && totalBid>=shippingLimit2){
                shipmentRate=shipmentRate2;
            }
        }    
        $('#shipmentTotal').val(shipmentRate + rateDistance*distance);    
        $('#shippingTotal').html($('#shipmentTotal').val());    
        orderUpdateTotal();
    }
    
    function shippingParams(){
        $('#shipmentRate').val(0);
        $('#rateDistance').val(0);        
        $('#shipmentDistance').val(0);        
        $('#shipmentTotal').val(0);
        $('#shipmentRate1').val(0);        
        $('#shipmentRate2').val(0);        
        $('#shippingLimit1').val(0);        
        $('#shippingLimit2').val(0);        
        let shipping = $('#shipping').val();        
        $('#shipmentDistance').attr('disabled', true);
        $('#trackNumber').attr('disabled', true);
        $('#courier').attr('disabled', true);
        if (shipping > 0){
            $.get('/order/shipping/'+shipping, function(data){
                $('#rate').val(data.rate);
                switch(data.rate){
                    case '<?= Shipping::RATE_TK?>':
                        $('#trackNumber').attr('disabled', false);
                        $('#courier').attr('disabled', false);
                        break;
                    case '<?= Shipping::RATE_DISTANCE?>':
                        $('#shipmentDistance').attr('disabled', false);
                        $('#rateDistance').val(data.rateDistance);        
                    case '<?= Shipping::RATE_TRIP?>':
                        $('#shipmentRate1').val(data.rateTrip1);        
                        $('#shipmentRate2').val(data.rateTrip2);        
                        $('#shippingLimit1').val(data.shippingLimit1);        
                        $('#shippingLimit2').val(data.shippingLimit2);        
                    default:     
                        $('#shipmentRate').val(data.rateTrip); break;
                    };
                shippingUpdate();    
            });    
        }    
    }
    
    function shippingList(){
        //alert(11);
        $.getJSON( '/order/shippings/'+$('#office').val(), function( data ) {
            $('#shipping').empty();
            $.each( data.rows, function( key, value ) {
                $('#shipping').append('<option value="' + value.id + '">' + value.name + '</option>');
            });
            shippingParams();
        });    
    }

    function contractList(){
        $.getJSON( '/contracts/select/?company='+$('#company').val()+'&legal='+$('#legal').val(), function( data ) {
            $('#contract').empty();
            $.each( data.rows, function( key, value ) {
                $('#contract').append('<option value="' + key + '">' + value.name + '</option>');
            });
        });    
    }

    function enableSms(){
        let aplId = Number($('#aplId').val());
        $('.sms-message-modal-show').attr('disabled', !aplId);
    }
    
    function enablePost(){
        let aplId = Number($('#aplId').val());
        $('.post-message-modal-show').attr('disabled', !aplId);
    }
    
    $(document).on('editable-save.bs.table', '#ordergoodtable', function (e, field, row, old, $el) {
        shippingUpdate();
    });        
    
    $('#office').on('change', function(){
        shippingList();        
    });

    $('#shipping').on('change', function(){
        shippingParams();        
    });

    $('#shipmentDistance').on('change', function(){
        shippingUpdate();        
    });

    $('#shipmentTotal').on('change', function(){
        $('#shippingTotal').html($('#shipmentTotal').val());
        orderUpdateTotal();        
    });
    
    $('#plusGood').on('click', function(){
        insertGood();        
    });

    $('#company').on('change', function(){
        contractList();
    });    
    
    $('#legal').on('change', function(){
        contractList();
    });
    
    function orderUpdateTotal(){
        var amount = 0; var num = 0;
        let shipmentTotal = Number($('#shipmentTotal').val());
        var data = $('#ordergoodtable').bootstrapTable('getData');
        $.each(data, function( index, value ) {
            amount += Math.round(value.price*value.num*100)/100;
            num += Math.round(value.num*100)/100; 
        });
        $('#orderAmount').html((Math.round((amount + shipmentTotal)*100)/100).toFixed(0));
        $('#orderQuantity').html((Math.round(num*100)/100).toFixed(0));
    }
    
    //удаление строки из таблицы
    function removeTableRowByUniqueId(index){
        $('#ordergoodtable').bootstrapTable('removeByUniqueId', index);
        orderUpdateTotal();
    }
    
    // установка цен в таблице
    function priceColSets(col){
        let data = $table.bootstrapTable('getData');
        $.each(data, function( index, value ) {
            let opts = $.parseJSON(value.opts);
            if ($.isArray(opts)){
                let price = opts[col];
                let uid = value.id;
                if (price){
                    $table.bootstrapTable('updateCellByUniqueId', {id: index, field: 'price', value: price});
                }    
            }    
        });
        
    }
        
    $( document ).ready(function() {
        
	$(document).on('input', ':input', function() {
		window.onbeforeunload = set_onbeforeunload;
	});

        $('.select-on-focus').on('click', function () {
            if ($(this).val() == '0'){
                $(this).select();
            }
        });
        
        $table.bootstrapTable({
            onLoadSuccess: function(res){
                $('#shippingTotal').html($('#shipmentTotal').val());    
                bidTotal();
                orderUpdateTotal();
            }            
        }); 
        
        enableSms();
        enablePost();
        $("#vinLength").html($('input[name="vin"]').val().length);

        $('.price-select-btn').on('click', function(){
            $('.price-select-btn.btn-info').addClass('btn-default')
            $('.btn-info.price-select-btn').removeClass('btn-info')
            $(this).removeClass('btn-default')
            $(this).addClass('btn-info')
            let col = $(this).html();
            priceColSets(col);
        })    
        
        <?php if (!$orderId): ?>
            shippingParams();    
        <?php endif; ?>    
            
        $('#order-submit').on('click', function(){
            $('#order-submit').attr('disabled', true);
            submitForm();
        })    
        
//        var forms = $('#order-form');
//        
//        forms.submit(function() {
//            submitForm();
//            return false;
//        });
//        // Loop over them and prevent submission
//        var validation = Array.prototype.filter.call(forms, function(form) {
//            form.addEventListener('order-submit', function(event) {
//                if (form.checkValidity() === false) {
//                    event.preventDefault();
//                    event.stopPropagation();
//                }
//                form.classList.add('was-validated');
//                submitForm();
//            }, false);    
//        });
    });    
    
    function orderGoodRefreshTable(){
        $table.bootstrapTable('refresh');
    }
    
    function ordergoodQueryParams(params) {
        $('#ordergoodtoolbar').find('input[name]').each(function () {
            params[$(this).attr('name')] = $(this).val();
        });
        limit = $('#ordergoodtable .page-size').html();
        if (limit){
            params.limit = limit;
        }    
        offset = $('#ordergoodtable li.page-number.active a').html();
        if (offset){
            params.offset = params.limit * (offset - 1);
        }    
        
        return params;
    }
    
    function goodFormatter(value, row){
        var url = '/goods/view/'+row.good.id;
        btn = '<nobr><a';
        btn += ' href="'+url+'"';
        btn += ' class="btn btn-link btn-xs" target="_blank">';
        btn += '<span class="glyphicon glyphicon-link"></span>';
        btn += '</a>'+value + '</nobr>';
        return btn;
    }    

    function geNameFormatter(value, row){
        if (value) return value;
        if (row.good.tokenGroup.name) return row.good.tokenGroup.name;        
        if (row.good.name) return row.good.name; 
        if (row.good.description)return row.good.description;
        return 'Нет названия';
    }    
    
    function geActiveFormatter(value, row){
        var url = '/order/good-edit-form/';
        btn = '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-default btn-xs order-good-modal-show"';
        btn += ' aria-label="Left Align"'; 
        btn += ' unique-id="'+value+'"';
        btn += ' modal-url="'+url+'">';
        btn += '<span class="glyphicon glyphicon-edit" aria-hidden="true"></span>';
        btn += '</button>';

        return btn;
    }    
    function grActiveFormatter(value, row){
        let btn = '<button';
        btn += ' type="button"';
        btn += ' class="btn btn-danger btn-xs table-row-remove"';
        btn += ' aria-label="Left Align"'; 
        btn += ' title="Удалить"'; 
        btn += ' onclick="removeTableRowByUniqueId('+value+')">';
        btn += '<span class="glyphicon glyphicon-remove" aria-hidden="true"></span>';
        btn += '</button>';
        return btn;
    }    
    
    function gePriceFormatter(value){
        return (Math.round(value)).toFixed(0);
    }        

    function geAmountFormatter(value, row){
        return (Math.round(row.price*row.num*100)/100).toFixed(0);
    }        
    
    function ordergoodResponseHandler(res) {
        return res;
    }     
</script>